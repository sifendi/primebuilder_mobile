import { Platform } from 'ionic-angular';
import { Injectable } from '@angular/core';
import { AppPreferences } from '@ionic-native/app-preferences';
import { ALL_KEYS, SQL_QUERY, SITE_API } from './constant';
import * as moment from 'moment';
import { Transfer, FileUploadOptions, TransferObject } from '@ionic-native/transfer';
import { File } from '@ionic-native/file';
import {  App_rdsApi, App_productsApi, App_projectsApi,App_check_in_outApi,App_product_receiptApi,App_rds_stockApi,App_rds_visitApi,Project_typeApi,Project_stageApi, NmcApi, Monthly_actual_targetApi, Monthly_forecast_targetApi, Monthly_visiting_scheduleApi, App_hpbApi   }  from '../shared/loopback_sdk';
import async from 'async'; 
import 'rxjs/add/operator/map';
declare let window:any;
declare var cordova:any
declare var sessionUserGlobalData;
@Injectable()
export class SyncServices {	
    storageSql:any;
    currUserData:any;
    constructor(private app_hpbApi:App_hpbApi,private app_check_in_outApi:App_check_in_outApi, private appProjApi:App_projectsApi,private app_rds_stockApi:App_rds_stockApi,private appRdsVisitApi:App_rds_visitApi,private appProdApi:App_product_receiptApi,private monthly_actual_targetApi:Monthly_actual_targetApi,private monthly_forecast_targetApi:Monthly_forecast_targetApi, private monthly_visiting_scheduleApi:Monthly_visiting_scheduleApi  , private nmcApi:NmcApi,private project_typeApi:Project_typeApi,private project_stageApi:Project_stageApi,private app_rdsApi:App_rdsApi,private app_productsApi:App_productsApi,public platform:Platform,public appPref: AppPreferences,private transfer: Transfer, private file: File) {
        console.log('SyncServices...');
        platform.ready().then(()=>{
          this.storageSql = window.sqlitePlugin.openDatabase({name: 'hpb.db', key: ALL_KEYS.DB_KEY, location: 'default',createFromLocation: 1});   
          
     });
   
    }

openSyncDb(){
        return new Promise((resolve, reject) => {
                this.storageSql = window.sqlitePlugin.openDatabase({name: "hpb.db",key: ALL_KEYS.DB_KEY, location: 'default',createFromLocation: 1});
                resolve(true);
        });
  }

startSync(){
            this.openSyncDb();
            console.log('startSync');
}
   
endSync(){
            console.log('endSync');
}

syncAllUpDownLocalMaster(){
        return new Promise((resolve,reject)=>{
              this.syncAllOtherData().then((resData)=>{
                resolve(true);
              },(error)=>{
                reject(true);
              });
        });
}

syncgetCurrentTimeStamp(){
    let newDateUnix = moment().valueOf();
    return newDateUnix;
}

syncAllOtherData(){
      return new Promise((resolve,reject)=>{
      console.log('syncAllMaster');
      console.log('sessionUserGlobalData',sessionUserGlobalData);


        let allTaskComplete = ()=>{
            resolve(true);
        }


      	var asyncTasks = [];

       

        asyncTasks.push((callback)=>{
                this.syncProjectDF().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });  

  

     

        asyncTasks.push((callback)=>{
                this.syncRetCurSkD().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });

        asyncTasks.push((callback)=>{
                this.syncCheckInCheckOutD().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });      

       

        asyncTasks.push((callback)=>{
                this.syncAllMaster().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });              


        async.parallel(asyncTasks, function(){
            allTaskComplete();
        });

  
    });
}

syncHpbD(){
    return new Promise((resolve,reject)=>{
        
        let tableName='hpb_master';
        let filterS={};
        let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";

        this.queryExecuteSql(query,[]).then((resDataQ:any)=>{
                let filterDataH={};
              
                filterDataH['created_by']=sessionUserGlobalData['userId'];
                console.log('resDataQ',resDataQ);
                 if(resDataQ.rows.length > 0){
                    let tmpDataObj=resDataQ.rows.item(0);
                    filterDataH['updated_date']=tmpDataObj['updated_date'];
                }

                this.app_hpbApi.getHpb(null,null,filterDataH['updated_date'],filterDataH['created_by']).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas['result'];

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_hpb_id="+respData['hpb_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;
                                    updateObj['server_hpb_id']=respData['hpb_id'];

                                    if(locaDataRow['hpb_name']!=respData['hpb_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_name']=respData['hpb_name'];
                                    }
                                    if(locaDataRow['hpb_type']!=respData['hpb_type']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_type']=respData['hpb_type'];
                                    } 
                                    if(locaDataRow['hpb_profile_pic']!=respData['hpb_profile_pic']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_profile_pic']=respData['hpb_profile_pic'];
                                    }
                                    if(locaDataRow['primary_mobile_no']!=respData['primary_mobile_no']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['primary_mobile_no']=respData['primary_mobile_no'];
                                    }  
                                    if(locaDataRow['secondary_mobile_no']!=respData['secondary_mobile_no']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['secondary_mobile_no']=respData['secondary_mobile_no'];
                                    } 
                                    if(locaDataRow['hpb_email']!=respData['hpb_email']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_email']=respData['hpb_email'];
                                    }
                                    if(locaDataRow['place_of_birth']!=respData['place_of_birth']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['place_of_birth']=respData['place_of_birth'];
                                    }
                                    if(locaDataRow['date_of_birth']!=respData['date_of_birth']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['date_of_birth']=respData['date_of_birth'];
                                    } 
                                    if(locaDataRow['id_photo']!=respData['id_photo']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_photo']=respData['id_photo'];
                                    } 
                                    if(locaDataRow['id_card_address']!=respData['id_card_address']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_address']=respData['id_card_address'];
                                    }
                                    if(locaDataRow['id_card_number']!=respData['id_card_number']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_number']=respData['id_card_number'];
                                    }
                                    if(locaDataRow['id_card_city']!=respData['id_card_city']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_city']=respData['id_card_city'];
                                    }
                                    if(locaDataRow['id_card_sub_district']!=respData['id_card_sub_district']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_sub_district']=respData['id_card_sub_district'];
                                    } 
                                    if(locaDataRow['id_card_province']!=respData['id_card_province']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_province']=respData['id_card_province'];
                                    }   
                                    if(locaDataRow['id_card_pincode']!=respData['id_card_pincode']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['id_card_pincode']=respData['id_card_pincode'];
                                    } 
                                    if(locaDataRow['domicile_same_as_id_card']!=respData['domicile_same_as_id_card']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_same_as_id_card']=respData['domicile_same_as_id_card'];
                                    }                                                                                                                                                 
                                    if(locaDataRow['domicile_address']!=respData['domicile_address']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_address']=respData['domicile_address'];
                                    } 
                                    if(locaDataRow['domicile_province']!=respData['domicile_province']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_province']=respData['domicile_province'];
                                    } 
                                    if(locaDataRow['domicile_city']!=respData['domicile_city']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_city']=respData['domicile_city'];
                                    }
                                    if(locaDataRow['domicile_sub_district']!=respData['domicile_sub_district']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_sub_district']=respData['domicile_sub_district'];
                                    }  
                                    if(locaDataRow['domicile_pincode']!=respData['domicile_pincode']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['domicile_pincode']=respData['domicile_pincode'];
                                    } 
                                    if(locaDataRow['company_name']!=respData['company_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['company_name']=respData['company_name'];
                                    }
                                    if(locaDataRow['company_representative_name']!=respData['company_representative_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['company_representative_name']=respData['company_representative_name'];
                                    } 
                                    if(locaDataRow['company_designation']!=respData['company_designation']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['company_designation']=respData['company_designation'];
                                    }
                                     if(locaDataRow['company_designation']!=respData['company_designation']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['company_designation']=respData['company_designation'];
                                    }
                                     if(locaDataRow['hpb_status']!=respData['hpb_status']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_status']=respData['hpb_status'];
                                    }
                                    if(locaDataRow['hpb_digital_sign']!=respData['hpb_digital_sign']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_digital_sign']=respData['hpb_digital_sign'];
                                    }  
                                    if(locaDataRow['additional_comments']!=respData['additional_comments']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['additional_comments']=respData['additional_comments'];
                                    } 
                                    if(locaDataRow['latitude']!=respData['latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['latitude']=respData['latitude'];
                                    } 
                                     if(locaDataRow['longitude']!=respData['longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['longitude']=respData['longitude'];
                                    }
                                     if(locaDataRow['created_date']!=respData['created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_date']=respData['created_date'];
                                    }
                                     if(locaDataRow['updated_date']!=respData['updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_date']=respData['updated_date'];
                                    }
                                    if(locaDataRow['created_by']!=respData['created_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_by']=respData['created_by'];
                                    }
                                   if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['assigned_to']=respData['assigned_to'];
                                    }
                                    if(locaDataRow['generated_by']!=respData['generated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['generated_by']=respData['generated_by'];
                                    }


                                    if(respData['status']){
                                        if(locaDataRow['status']!=respData['status']){
                                          syncStatus=0;
                                        }else{
                                          updateObj['status']=respData['status'];
                                        }
                                    }else{
                                        updateObj['status']=1;
                                    }

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_hpb_id="+respData['hpb_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                    allFileObjeArr['hpb_profile_pic']=respData['hpb_profile_pic'];
                                    allFileObjeArr['id_photo']=respData['id_photo'];
                                    allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        updateObj['hpb_profile_pic']=JSON.stringify(allFileObjeArrRet['hpb_profile_pic']);
                                        updateObj['id_photo']=JSON.stringify(allFileObjeArrRet['id_photo']);
                                        updateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);

                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_hpb_id']=respData['hpb_id'];
                                    insertObj['hpb_name']=respData['hpb_name'];
                                    insertObj['hpb_type']=respData['hpb_type'];
                                    insertObj['hpb_profile_pic']=respData['hpb_profile_pic'];
                                    insertObj['primary_mobile_no']=respData['primary_mobile_no'];
                                    insertObj['secondary_mobile_no']=respData['secondary_mobile_no'];
                                    insertObj['hpb_email']=respData['hpb_email'];
                                    insertObj['place_of_birth']=respData['place_of_birth'];
                                    insertObj['date_of_birth']=respData['date_of_birth'];
                                    insertObj['id_photo']=respData['id_photo'];
                                    insertObj['id_card_address']=respData['id_card_address'];
                                    insertObj['id_card_province']=respData['id_card_province'];
                                    insertObj['id_card_number']=respData['id_card_number'];
                                    insertObj['id_card_city']=respData['id_card_city'];
                                    insertObj['id_card_sub_district']=respData['id_card_sub_district'];
                                    insertObj['id_card_pincode']=respData['id_card_pincode'];
                                    insertObj['domicile_same_as_id_card']=respData['domicile_same_as_id_card'];
                                    insertObj['domicile_address']=respData['domicile_address'];
                                    insertObj['domicile_province']=respData['domicile_province'];
                                    insertObj['domicile_city']=respData['domicile_city'];
                                    insertObj['domicile_sub_district']=respData['domicile_sub_district'];
                                    insertObj['domicile_pincode']=respData['domicile_pincode'];
                                    insertObj['company_name']=respData['company_name'];
                                    insertObj['company_representative_name']=respData['company_representative_name'];
                                    insertObj['company_designation']=respData['company_designation'];
                                    insertObj['hpb_status']=respData['hpb_status'];
                                    insertObj['hpb_digital_sign']=respData['hpb_digital_sign'];
                                    insertObj['additional_comments']=respData['additional_comments'];
                                    insertObj['latitude']=respData['latitude'];
                                    insertObj['longitude']=respData['longitude'];
                                    insertObj['created_date']=respData['created_date'];
                                    insertObj['updated_date']=respData['updated_date'];
                                    insertObj['created_by']=respData['created_by'];
                                    insertObj['updated_by']=respData['updated_by'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    insertObj['assigned_to']=respData['assigned_to'];
                                    insertObj['generated_by']=respData['generated_by'];
                                    
                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    allFileObjeArr['hpb_profile_pic']=respData['hpb_profile_pic'];
                                    allFileObjeArr['id_photo']=respData['id_photo'];
                                    allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        insertObj['hpb_profile_pic']=JSON.stringify(allFileObjeArrRet['hpb_profile_pic']);
                                        insertObj['id_photo']=JSON.stringify(allFileObjeArrRet['id_photo']);
                                        insertObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);


                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let hpb_id=0;
                                                let insertUpdateObj={};
                                               
                                                


                                                insertUpdateObj['hpb_name']=resDatasUs['hpb_name'];
                                                insertUpdateObj['hpb_type']=resDatasUs['hpb_type'];
                                                insertUpdateObj['primary_mobile_no']=resDatasUs['primary_mobile_no'];
                                                insertUpdateObj['secondary_mobile_no']=resDatasUs['secondary_mobile_no'];
                                                insertUpdateObj['hpb_email']=resDatasUs['hpb_email'];
                                                insertUpdateObj['place_of_birth']=resDatasUs['place_of_birth'];
                                                insertUpdateObj['date_of_birth']=resDatasUs['date_of_birth'];
                                                insertUpdateObj['id_card_address']=resDatasUs['id_card_address'];
                                            
                                                insertUpdateObj['id_card_province']=resDatasUs['id_card_province'];
                                                insertUpdateObj['id_card_number']=resDatasUs['id_card_number'];
                                                insertUpdateObj['id_card_city']=resDatasUs['id_card_city'];
                                                insertUpdateObj['id_card_sub_district']=resDatasUs['id_card_sub_district'];
                                                insertUpdateObj['id_card_pincode']=resDatasUs['id_card_pincode'];
                                                insertUpdateObj['domicile_same_as_id_card']=resDatasUs['domicile_same_as_id_card'];
                                                insertUpdateObj['domicile_address']=resDatasUs['domicile_address'];
                                                insertUpdateObj['domicile_province']=resDatasUs['domicile_province'];
                                                insertUpdateObj['domicile_city']=resDatasUs['domicile_city'];
                                                insertUpdateObj['domicile_sub_district']=resDatasUs['domicile_sub_district'];
                                                insertUpdateObj['domicile_pincode']=resDatasUs['domicile_pincode'];
                                                insertUpdateObj['company_name']=resDatasUs['company_name'];
                                                insertUpdateObj['company_representative_name']=resDatasUs['company_representative_name'];
                                                insertUpdateObj['company_designation']=resDatasUs['company_designation'];
                                                insertUpdateObj['hpb_status']=resDatasUs['hpb_status'];
                                                insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                insertUpdateObj['updated_by']=resDatasUs['updated_by'];
                                                insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                                                
                                                insertUpdateObj['status']=resDatasUs['status'];
                                                
                                                 if(resDatasUs['server_hpb_id']>0){
                                                   hpb_id=resDatasUs['server_hpb_id'];
                                                }else{
                                                    insertUpdateObj['latitude']=resDatasUs['latitude'];
                                                    insertUpdateObj['longitude']=resDatasUs['longitude'];
                                                    insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                    insertUpdateObj['created_by']=resDatasUs['created_by'];
                                                    insertUpdateObj['generated_by']=resDatasUs['generated_by'];
                                               }

                                                insertUpdateObj['hpb_profile_pic']=resDatasUs['hpb_profile_pic'];
                                                insertUpdateObj['id_photo']=resDatasUs['id_photo'];
                                                insertUpdateObj['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];

                                                let allFileObjeArr = {};
                                                allFileObjeArr['hpb_profile_pic']=insertUpdateObj['hpb_profile_pic'];
                                                allFileObjeArr['id_photo']=insertUpdateObj['id_photo'];
                                                allFileObjeArr['hpb_digital_sign']=insertUpdateObj['hpb_digital_sign'];

                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                                       // allFileObjeArrRet
                                                        insertUpdateObj['hpb_profile_pic']=JSON.stringify(allFileObjeArrRet['hpb_profile_pic']);
                                                        insertUpdateObj['id_photo']=JSON.stringify(allFileObjeArrRet['id_photo']);
                                                        insertUpdateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);

                                                        this.app_hpbApi.addEditHpb(insertUpdateObj,hpb_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                updateDataObj['hpb_profile_pic']=insertUpdateObj['hpb_profile_pic'];
                                                                updateDataObj['id_photo']=insertUpdateObj['id_photo'];
                                                                updateDataObj['hpb_digital_sign']=insertUpdateObj['hpb_digital_sign'];
                                                                updateDataObj['server_hpb_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" hpb_id="+resDatasUs['hpb_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


        },()=>{
            reject(true);
        });

    });    
}

// syncProjectDF(){
//  return new Promise((resolve,reject)=>{
//     this.syncHpbD().then(()=>{

//         this.syncProjectDD().then(()=>{
//              resolve(true);
//         },()=>{
//              resolve(true);
//         });

//     },(syncError)=>{

//        this.syncProjectDD().then(()=>{
//             resolve(true);
//         },()=>{
//             resolve(true);
//         });

//     });

//     });
// }

syncProjectDD(){
 return new Promise((resolve,reject)=>{
        
        let tableName='project_master';
        let tableNameDepnd='hpb_master';
        let filterS={};
        let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";
        let hbpCheckSync=0;
        this.queryExecuteSql(query,[]).then((resDataQ:any)=>{
                let filterDataH={};
              
                filterDataH['created_by']=sessionUserGlobalData['userId'];
                console.log('resDataQ',resDataQ);
                 if(resDataQ.rows.length > 0){
                    let tmpDataObj=resDataQ.rows.item(0);
                    filterDataH['updated_date']=tmpDataObj['updated_date'];
                }

                this.appProjApi.getProject(null,null,null,null,null,null,null,filterDataH['created_by'],null,null,filterDataH['updated_date']).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas['result'];

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+"  WHERE server_project_id="+respData['project_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;

                                    updateObj['server_project_id']=respData['project_id'];

                                    if(locaDataRow['project_name']!=respData['project_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_name']=respData['project_name'];
                                    }
                                    if(locaDataRow['server_hpb_id']!=respData['hpb_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['server_hpb_id']=respData['hpb_id'];
                                    }
                                     
                                    if(locaDataRow['project_completion_date']!=respData['project_completion_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_completion_date']=respData['project_completion_date'];
                                    }
                                    if(locaDataRow['project_quantity_estimation']!=respData['project_quantity_estimation']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_quantity_estimation']=respData['project_quantity_estimation'];
                                    }  
                                   
                                    if(locaDataRow['project_type_mid']!=respData['project_type']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_type_mid']=respData['project_type'];
                                    }
                                    if(locaDataRow['project_stage_mid']!=respData['project_stage']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_stage_mid']=respData['project_stage'];
                                    }
                                    if(locaDataRow['project_photo']!=respData['project_photo']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_photo']=respData['project_photo'];
                                    } 
                                    if(locaDataRow['project_address']!=respData['project_address']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_address']=respData['project_address'];
                                    } 
                                    if(locaDataRow['project_province']!=respData['project_province']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_province']=respData['project_province'];
                                    }
                                    if(locaDataRow['project_city']!=respData['project_city']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_city']=respData['project_city'];
                                    } 
                                    if(locaDataRow['project_sub_district']!=respData['project_sub_district']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_sub_district']=respData['project_sub_district'];
                                    } 
                                    if(locaDataRow['project_pincode']!=respData['project_pincode']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['project_pincode']=respData['project_pincode'];
                                    }                                                                                                                                                 
                                    if(locaDataRow['is_srku']!=respData['is_srku']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['is_srku']=respData['is_srku'];
                                    } 
                                    if(locaDataRow['srku_owner_name']!=respData['srku_owner_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_owner_name']=respData['srku_owner_name'];
                                    } 
                                    if(locaDataRow['srku_owner_address']!=respData['srku_owner_address']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_owner_address']=respData['srku_owner_address'];
                                    }
                                    if(locaDataRow['srku_owner_mobile_no']!=respData['srku_owner_mobile_no']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_owner_mobile_no']=respData['srku_owner_mobile_no'];
                                    }  
                                    if(locaDataRow['srku_province']!=respData['srku_province']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_province']=respData['srku_province'];
                                    } 
                                    if(locaDataRow['srku_city']!=respData['srku_city']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_city']=respData['srku_city'];
                                    }
                                    if(locaDataRow['srku_sub_district']!=respData['srku_sub_district']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_sub_district']=respData['srku_sub_district'];
                                    } 
                                    if(locaDataRow['srku_pincode']!=respData['srku_pincode']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['srku_pincode']=respData['srku_pincode'];
                                    }
                                     if(locaDataRow['floor_size']!=respData['floor_size']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['floor_size']=respData['floor_size'];
                                    }
                                     if(locaDataRow['number_of_units']!=respData['number_of_units']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['number_of_units']=respData['number_of_units'];
                                    }
                                    if(locaDataRow['is_micro_credit']!=respData['is_micro_credit']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['is_micro_credit']=respData['is_micro_credit'];
                                    }  
                                    if(locaDataRow['bank_name']!=respData['bank_name']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['bank_name']=respData['bank_name'];
                                    } 
                                    if(locaDataRow['bank_document']!=respData['bank_document']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['bank_document']=respData['bank_document'];
                                    } 
                                     if(locaDataRow['non_micro_credit_type']!=respData['non_micro_credit_type']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['non_micro_credit_type']=respData['non_micro_credit_type'];
                                    }
                                    if(locaDataRow['nmc_document']!=respData['nmc_document']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['nmc_document']=respData['nmc_document'];
                                    }
                                     if(locaDataRow['additional_comments']!=respData['additional_comments']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['additional_comments']=respData['additional_comments'];
                                    }
                                    if(locaDataRow['hpb_digital_sign']!=respData['hpb_digital_sign']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['hpb_digital_sign']=respData['hpb_digital_sign'];
                                    }
                                    if(locaDataRow['latitude']!=respData['latitude']){
                                       syncStatus=0;
                                    }else{
                                     updateObj['latitude']=respData['latitude'];
                                    } 
                                    if(locaDataRow['longitude']!=respData['longitude']){
                                     syncStatus=0;
                                    }else{
                                        updateObj['longitude']=respData['longitude'];
                                    }
                                     if(locaDataRow['created_date']!=respData['created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_date']=respData['created_date'];
                                    }
                                     if(locaDataRow['updated_date']!=respData['updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_date']=respData['updated_date'];
                                    }
                                    if(locaDataRow['created_by']!=respData['created_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_by']=respData['created_by'];
                                    }
                                   if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                  
                                    if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['assigned_to']=respData['assigned_to'];
                                    }

                                    if(locaDataRow['generated_by']!=respData['generated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['generated_by']=respData['generated_by'];
                                    }
                                   

                                    if(locaDataRow['local_created_date']!=respData['local_created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_created_date']=respData['local_created_date'];
                                    }
                                    if(locaDataRow['local_updated_date']!=respData['local_updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_updated_date']=respData['local_updated_date'];
                                    }
                                    

                                    if(locaDataRow['status']!=respData['status']){
                                          syncStatus=0;
                                       }else{
                                          updateObj['status']=respData['status'];
                                     }
                                  

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_project_id="+respData['project_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                    allFileObjeArr['project_photo']=respData['project_photo'];
                                    allFileObjeArr['bank_document']=respData['bank_document'];
                                    allFileObjeArr['nmc_document']=respData['nmc_document'];
                                    allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        updateObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
                                        updateObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
                                        updateObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
                                        updateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);

                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          
                                         callback();
                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_project_id']=respData['project_id'];
                                    insertObj['project_name']=respData['project_name'];
                                    insertObj['server_hpb_id']=respData['hpb_id'];
                                    insertObj['project_completion_date']=respData['project_completion_date'];
                                    insertObj['project_quantity_estimation']=respData['project_quantity_estimation'];
                                    insertObj['project_type_mid']=respData['project_type'];
                                    insertObj['project_stage_mid']=respData['project_stage'];
                                    insertObj['project_photo']=respData['project_photo'];
                                    insertObj['project_address']=respData['project_address'];
                                    insertObj['project_province']=respData['project_province'];
                                    insertObj['project_city']=respData['project_city'];
                                    insertObj['project_sub_district']=respData['project_sub_district'];
                                    insertObj['project_pincode']=respData['project_pincode'];
                                    insertObj['is_srku']=respData['is_srku'];
                                    insertObj['srku_owner_name']=respData['srku_owner_name'];
                                    insertObj['srku_owner_address']=respData['srku_owner_address'];
                                    insertObj['srku_owner_mobile_no']=respData['srku_owner_mobile_no'];
                                    insertObj['srku_province']=respData['srku_province'];
                                    insertObj['srku_city']=respData['srku_city'];
                                    insertObj['srku_sub_district']=respData['srku_sub_district'];
                                    insertObj['srku_pincode']=respData['srku_pincode'];
                                    insertObj['floor_size']=respData['floor_size'];
                                    insertObj['number_of_units']=respData['number_of_units'];
                                    insertObj['is_micro_credit']=respData['is_micro_credit'];
                                    insertObj['bank_name']=respData['bank_name'];
                                    insertObj['bank_document']=respData['bank_document'];
                                    insertObj['non_micro_credit_type']=respData['non_micro_credit_type'];
                                    insertObj['nmc_document']=respData['nmc_document'];
                                    insertObj['additional_comments']=respData['additional_comments'];
                                    insertObj['hpb_digital_sign']=respData['hpb_digital_sign'];
                                    insertObj['latitude']=respData['latitude'];
                                    insertObj['longitude']=respData['longitude'];
                                    insertObj['created_date']=respData['created_date'];
                                    insertObj['updated_date']=respData['updated_date'];
                                    insertObj['created_by']=respData['created_by'];
                                    insertObj['updated_by']=respData['updated_by'];
                                    insertObj['assigned_to']=respData['assigned_to'];
                                    insertObj['generated_by']=respData['generated_by'];

                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];

                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    allFileObjeArr['project_photo']=respData['project_photo'];
                                    allFileObjeArr['bank_document']=respData['bank_document'];
                                    allFileObjeArr['nmc_document']=respData['nmc_document'];
                                    allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                    insertObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
                                    insertObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
                                    insertObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
                                    insertObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);


                                    this.insertData(insertObj,tableName).then((resInsData)=>{
                                        console.log('resInsData',resInsData);
                                        callback();
                                    },(err)=>{
                                        callback();
                                    });


                                 },(errDDD)=>{
                                     console.log('errDDD',errDDD);
                                      callback();

                                 });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    console.log('resDatasUss project',resDatasUss);
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                console.log('resDatasUs aync',resDatasUs);

                                                let project_id=0;
                                                let insertUpdateObj={};
                                               
                                                
                                                insertUpdateObj['project_name']=resDatasUs['project_name'];
                                                insertUpdateObj['hpb_id']=resDatasUs['server_hpb_id'];
                                                insertUpdateObj['project_completion_date']=resDatasUs['project_completion_date'];
                                                insertUpdateObj['project_quantity_estimation']=resDatasUs['project_quantity_estimation'];
                                                insertUpdateObj['project_type']=resDatasUs['project_type_mid'];
                                                insertUpdateObj['project_stage']=resDatasUs['project_stage_mid'];
                                                insertUpdateObj['project_photo']=resDatasUs['project_photo'];
                                                insertUpdateObj['project_address']=resDatasUs['project_address'];
                                                insertUpdateObj['project_province']=resDatasUs['project_province'];
                                                insertUpdateObj['project_city']=resDatasUs['project_city'];
                                                insertUpdateObj['project_sub_district']=resDatasUs['project_sub_district'];
                                                insertUpdateObj['project_pincode']=resDatasUs['project_pincode'];
                                                insertUpdateObj['is_srku']=resDatasUs['is_srku'];
                                                insertUpdateObj['srku_owner_name']=resDatasUs['srku_owner_name'];
                                                insertUpdateObj['srku_owner_address']=resDatasUs['srku_owner_address'];
                                                insertUpdateObj['srku_owner_mobile_no']=resDatasUs['srku_owner_mobile_no'];
                                                insertUpdateObj['srku_province']=resDatasUs['srku_province'];
                                                insertUpdateObj['srku_city']=resDatasUs['srku_city'];
                                                insertUpdateObj['srku_sub_district']=resDatasUs['srku_sub_district'];
                                                insertUpdateObj['srku_pincode']=resDatasUs['srku_pincode'];
                                                insertUpdateObj['floor_size']=resDatasUs['floor_size'];
                                                insertUpdateObj['number_of_units']=resDatasUs['number_of_units'];
                                                insertUpdateObj['is_micro_credit']=resDatasUs['is_micro_credit'];
                                                insertUpdateObj['bank_name']=resDatasUs['bank_name'];
                                                insertUpdateObj['bank_document']=resDatasUs['bank_document'];
                                                insertUpdateObj['non_micro_credit_type']=resDatasUs['non_micro_credit_type'];
                                                insertUpdateObj['nmc_document']=resDatasUs['nmc_document'];
                                                insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
                                                insertUpdateObj['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];
                                                insertUpdateObj['updated_date']=resDatasUs['updated_date'];
                                                insertUpdateObj['updated_by']=resDatasUs['updated_by'];
                                                insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                

                                                

                                                 if(resDatasUs['server_poject_id']>0){
                                                   project_id=resDatasUs['server_poject_id'];
                                                }else{
                                                    insertUpdateObj['latitude']=resDatasUs['latitude'];
                                                    insertUpdateObj['longitude']=resDatasUs['longitude'];
                                                    insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                    insertUpdateObj['created_by']=resDatasUs['created_by'];
                                                    insertUpdateObj['generated_by']=insertUpdateObj['generated_by'];
                                                }

                                                insertUpdateObj['hpb_profile_pic']=resDatasUs['hpb_profile_pic'];
                                                insertUpdateObj['id_photo']=resDatasUs['id_photo'];
                                                insertUpdateObj['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];

                                                let allFileObjeArr = {};
                                                allFileObjeArr['project_photo']=resDatasUs['project_photo'];
                                                allFileObjeArr['bank_document']=resDatasUs['bank_document'];
                                                allFileObjeArr['nmc_document']=resDatasUs['nmc_document'];
                                                allFileObjeArr['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];
                                                console.log('upload LOcal to server start');
                                                this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{
                                                  console.log('upload LOcal to server end');
                                                       // a llFileObjeArrRet
                                                        insertUpdateObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
                                                        insertUpdateObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
                                                        insertUpdateObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
                                                        insertUpdateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);


                                                        this.appProjApi.addEditProject(insertUpdateObj,project_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                updateDataObj['project_photo']=insertUpdateObj['project_photo'];
                                                                updateDataObj['bank_document']=insertUpdateObj['bank_document'];
                                                                updateDataObj['nmc_document']=insertUpdateObj['nmc_document'];
                                                                updateDataObj['hpb_digital_sign']=insertUpdateObj['hpb_digital_sign'];
                                                                updateDataObj['server_project_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" project_id="+resDatasUs['project_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    

                                                                   

                                                                   callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },(errRejU)=>{
                                                           console.log('errRejU',errRejU);
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    
                    reject(false);

                });


        },()=>{
            reject(true);
        });

    });    
}

// syncProjectD(){
//  return new Promise((resolve,reject)=>{
        
//         let tableName='project_master';
//         let tableNameDepnd='hpb_master';
//         let filterS={};
//         let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";
//         let hbpCheckSync=0;
//         this.queryExecuteSql(query,[]).then((resDataQ:any)=>{
//                 let filterDataH={};
              
//                 filterDataH['created_by']=sessionUserGlobalData['userId'];
//                 console.log('resDataQ',resDataQ);
//                  if(resDataQ.rows.length > 0){
//                     let tmpDataObj=resDataQ.rows.item(0);
//                     filterDataH['updated_date']=tmpDataObj['updated_date'];
//                 }

//                 this.appProjApi.getProject(null,null,null,null,null,null,null,filterDataH['created_by'],null,null,filterDataH['updated_date']).subscribe((respDatas:any)=>{
                    
//                     console.log('respDatas',respDatas);

//                     let responseResults = respDatas['result'];

//                     console.log('responseResults',responseResults);

//                     // DownSync Start
                    
//                     async.each(responseResults,(respData,callback:any)=>{
                        
//                         console.log('DownSync each respData',respData);

//                         let sQuery="SELECT * FROM "+tableName+"  WHERE server_project_id="+respData['project_id']+"";
                        
//                         this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

//                             console.log('queryExecuteSql resQuData',resQuData);

//                             if(resQuData.rows.length > 0){
                                    
//                                     let locaDataRow=resQuData.rows.item(0);

//                                     console.log('locaDataRow',locaDataRow);

//                                     let updateObj={};
//                                     let syncStatus=1;

//                                     updateObj['server_project_id']=respData['project_id'];

//                                     if(locaDataRow['project_name']!=respData['project_name']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_name']=respData['project_name'];
//                                     }
//                                     if(locaDataRow['server_hpb_id']!=respData['hpb_id']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['server_hpb_id']=respData['hpb_id'];
//                                     }
                                     
//                                     if(locaDataRow['project_completion_date']!=respData['project_completion_date']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_completion_date']=respData['project_completion_date'];
//                                     }
//                                     if(locaDataRow['project_quantity_estimation']!=respData['project_quantity_estimation']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_quantity_estimation']=respData['project_quantity_estimation'];
//                                     }  
                                   
//                                     if(locaDataRow['project_type_mid']!=respData['project_type']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_type_mid']=respData['project_type'];
//                                     }
//                                     if(locaDataRow['project_stage_mid']!=respData['project_stage']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_stage_mid']=respData['project_stage'];
//                                     }
//                                     if(locaDataRow['project_photo']!=respData['project_photo']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_photo']=respData['project_photo'];
//                                     } 
//                                     if(locaDataRow['project_address']!=respData['project_address']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_address']=respData['project_address'];
//                                     } 
//                                     if(locaDataRow['project_province']!=respData['project_province']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_province']=respData['project_province'];
//                                     }
//                                     if(locaDataRow['project_city']!=respData['project_city']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_city']=respData['project_city'];
//                                     } 
//                                     if(locaDataRow['project_sub_district']!=respData['project_sub_district']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_sub_district']=respData['project_sub_district'];
//                                     } 
//                                     if(locaDataRow['project_pincode']!=respData['project_pincode']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['project_pincode']=respData['project_pincode'];
//                                     }                                                                                                                                                 
//                                     if(locaDataRow['is_srku']!=respData['is_srku']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['is_srku']=respData['is_srku'];
//                                     } 
//                                     if(locaDataRow['srku_owner_name']!=respData['srku_owner_name']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_owner_name']=respData['srku_owner_name'];
//                                     } 
//                                     if(locaDataRow['srku_owner_address']!=respData['srku_owner_address']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_owner_address']=respData['srku_owner_address'];
//                                     }
//                                     if(locaDataRow['srku_owner_mobile_no']!=respData['srku_owner_mobile_no']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_owner_mobile_no']=respData['srku_owner_mobile_no'];
//                                     }  
//                                     if(locaDataRow['srku_province']!=respData['srku_province']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_province']=respData['srku_province'];
//                                     } 
//                                     if(locaDataRow['srku_city']!=respData['srku_city']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_city']=respData['srku_city'];
//                                     }
//                                     if(locaDataRow['srku_sub_district']!=respData['srku_sub_district']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_sub_district']=respData['srku_sub_district'];
//                                     } 
//                                     if(locaDataRow['srku_pincode']!=respData['srku_pincode']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['srku_pincode']=respData['srku_pincode'];
//                                     }
//                                      if(locaDataRow['floor_size']!=respData['floor_size']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['floor_size']=respData['floor_size'];
//                                     }
//                                      if(locaDataRow['number_of_units']!=respData['number_of_units']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['number_of_units']=respData['number_of_units'];
//                                     }
//                                     if(locaDataRow['is_micro_credit']!=respData['is_micro_credit']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['is_micro_credit']=respData['is_micro_credit'];
//                                     }  
//                                     if(locaDataRow['bank_name']!=respData['bank_name']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['bank_name']=respData['bank_name'];
//                                     } 
//                                     if(locaDataRow['bank_document']!=respData['bank_document']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['bank_document']=respData['bank_document'];
//                                     } 
//                                      if(locaDataRow['non_micro_credit_type']!=respData['non_micro_credit_type']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['non_micro_credit_type']=respData['non_micro_credit_type'];
//                                     }
//                                     if(locaDataRow['nmc_document']!=respData['nmc_document']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['nmc_document']=respData['nmc_document'];
//                                     }
//                                      if(locaDataRow['additional_comments']!=respData['additional_comments']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['additional_comments']=respData['additional_comments'];
//                                     }
//                                     if(locaDataRow['hpb_digital_sign']!=respData['hpb_digital_sign']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['hpb_digital_sign']=respData['hpb_digital_sign'];
//                                     }
//                                     if(locaDataRow['latitude']!=respData['latitude']){
//                                        syncStatus=0;
//                                     }else{
//                                      updateObj['latitude']=respData['latitude'];
//                                     } 
//                                     if(locaDataRow['longitude']!=respData['longitude']){
//                                      syncStatus=0;
//                                     }else{
//                                         updateObj['longitude']=respData['longitude'];
//                                     }
//                                      if(locaDataRow['created_date']!=respData['created_date']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['created_date']=respData['created_date'];
//                                     }
//                                      if(locaDataRow['updated_date']!=respData['updated_date']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['updated_date']=respData['updated_date'];
//                                     }
//                                     if(locaDataRow['created_by']!=respData['created_by']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['created_by']=respData['created_by'];
//                                     }
//                                    if(locaDataRow['updated_by']!=respData['updated_by']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['updated_by']=respData['updated_by'];
//                                     }
                                  
//                                     if(locaDataRow['assigned_to']!=respData['assigned_to']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['assigned_to']=respData['assigned_to'];
//                                     }

//                                     if(locaDataRow['generated_by']!=respData['generated_by']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['generated_by']=respData['generated_by'];
//                                     }
                                   

//                                     if(locaDataRow['local_created_date']!=respData['local_created_date']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['local_created_date']=respData['local_created_date'];
//                                     }
//                                     if(locaDataRow['local_updated_date']!=respData['local_updated_date']){
//                                             syncStatus=0;
//                                     }else{
//                                         updateObj['local_updated_date']=respData['local_updated_date'];
//                                     }
                                    

//                                     if(locaDataRow['status']!=respData['status']){
//                                           syncStatus=0;
//                                        }else{
//                                           updateObj['status']=respData['status'];
//                                      }
                                  

//                                     updateObj['sync_status']=syncStatus;
//                                     updateObj['ext_data']="";
//                                     let whereCon=" server_project_id="+respData['project_id']+" ";
                                  
//                                     let allFileObjeArr = {};
//                                     allFileObjeArr['project_photo']=respData['project_photo'];
//                                     allFileObjeArr['bank_document']=respData['bank_document'];
//                                     allFileObjeArr['nmc_document']=respData['nmc_document'];
//                                     allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

//                                     this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

//                                         updateObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
//                                         updateObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
//                                         updateObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
//                                         updateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);

//                                         this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          
//                                           let hpb_id=locaDataRow['hpb_id'];
//                                           let server_hpb_id=respData['hpb_id'];
//                                           let project_id=locaDataRow['project_id'];
//                                           let server_project_id=respData['project_id'];
//                                           this.syncReceiptsSinglePrD(hpb_id,server_hpb_id,project_id,server_project_id).then(()=>{
//                                             callback();
//                                           },(errorRcP)=>{
//                                             callback();
//                                           });

//                                         // File Save To Local IF Updated

//                                         },(err)=>{

//                                           callback();

//                                         }); 

//                                 },(errDDDDD)=>{

//                                      callback();

//                                 });
                                  
                                  


//                             }else{


//                                     let insertObj={};
//                                     insertObj['server_project_id']=respData['project_id'];
//                                     insertObj['project_name']=respData['project_name'];
//                                     insertObj['server_hpb_id']=respData['hpb_id'];
//                                     insertObj['project_completion_date']=respData['project_completion_date'];
//                                     insertObj['project_quantity_estimation']=respData['project_quantity_estimation'];
//                                     insertObj['project_type_mid']=respData['project_type'];
//                                     insertObj['project_stage_mid']=respData['project_stage'];
//                                     insertObj['project_photo']=respData['project_photo'];
//                                     insertObj['project_address']=respData['project_address'];
//                                     insertObj['project_province']=respData['project_province'];
//                                     insertObj['project_city']=respData['project_city'];
//                                     insertObj['project_sub_district']=respData['project_sub_district'];
//                                     insertObj['project_pincode']=respData['project_pincode'];
//                                     insertObj['is_srku']=respData['is_srku'];
//                                     insertObj['srku_owner_name']=respData['srku_owner_name'];
//                                     insertObj['srku_owner_address']=respData['srku_owner_address'];
//                                     insertObj['srku_owner_mobile_no']=respData['srku_owner_mobile_no'];
//                                     insertObj['srku_province']=respData['srku_province'];
//                                     insertObj['srku_city']=respData['srku_city'];
//                                     insertObj['srku_sub_district']=respData['srku_sub_district'];
//                                     insertObj['srku_pincode']=respData['srku_pincode'];
//                                     insertObj['floor_size']=respData['floor_size'];
//                                     insertObj['number_of_units']=respData['number_of_units'];
//                                     insertObj['is_micro_credit']=respData['is_micro_credit'];
//                                     insertObj['bank_name']=respData['bank_name'];
//                                     insertObj['bank_document']=respData['bank_document'];
//                                     insertObj['non_micro_credit_type']=respData['non_micro_credit_type'];
//                                     insertObj['nmc_document']=respData['nmc_document'];
//                                     insertObj['additional_comments']=respData['additional_comments'];
//                                     insertObj['hpb_digital_sign']=respData['hpb_digital_sign'];
//                                     insertObj['latitude']=respData['latitude'];
//                                     insertObj['longitude']=respData['longitude'];
//                                     insertObj['created_date']=respData['created_date'];
//                                     insertObj['updated_date']=respData['updated_date'];
//                                     insertObj['created_by']=respData['created_by'];
//                                     insertObj['updated_by']=respData['updated_by'];
//                                     insertObj['assigned_to']=respData['assigned_to'];
//                                     insertObj['generated_by']=respData['generated_by'];

//                                     insertObj['local_updated_date']=respData['local_updated_date'];
//                                     insertObj['local_created_date']=respData['local_created_date'];

//                                     if(respData['status']){
//                                         insertObj['status']=respData['status'];
//                                     }else{
//                                          insertObj['status']=1;
//                                     }
//                                     insertObj['sync_status']=1;
//                                     insertObj['ext_data']="";

//                                     let allFileObjeArr = {};
//                                     allFileObjeArr['project_photo']=respData['project_photo'];
//                                     allFileObjeArr['bank_document']=respData['bank_document'];
//                                     allFileObjeArr['nmc_document']=respData['nmc_document'];
//                                     allFileObjeArr['hpb_digital_sign']=respData['hpb_digital_sign'];

//                                     this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

//                                     insertObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
//                                     insertObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
//                                     insertObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
//                                     insertObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);


                                         
                                            

//                                             let insertDataFun = (insertObjN,tableNameN)=>{

//                                                 return new Promise((reolveDaFun,rejectDaFun)=>{

//                                                      this.insertData(insertObjN,tableNameN).then((resInsData)=>{
//                                                         console.log('resInsData',resInsData);
//                                                         let inserted_id=resInsData['insertId'];
//                                                         let hpb_id=insertObjN['hpb_id'];
//                                                         let server_hpb_id=respData['hpb_id'];
//                                                         let project_id=inserted_id;
//                                                         let server_project_id=respData['project_id'];
//                                                         this.syncReceiptsSinglePrD(hpb_id,server_hpb_id,project_id,server_project_id).then(()=>{
//                                                             resolve(true);
//                                                         },(errorRcP)=>{
//                                                             resolve(true);
//                                                         });


//                                                     },(err)=>{
//                                                             resolve(true);
//                                                     });

//                                                 });

                                              
//                                          }


//                                     let hpbFunafterSync = ()=>{
                                            
//                                              return new Promise((reolveHpbFunafterSync,rejectHpbFunafterSync)=>{
//                                                  console.log('hpbFunafterSync In Project 1');
//                                               let subQuery="SELECT * FROM "+tableNameDepnd+" WHERE server_hpb_id="+respData['hpb_id'];
//                                               console.log('subQuery',subQuery);
//                                                 this.queryExecuteSql(subQuery,[]).then((resSubQueryData:any)=>{
//                                                       console.log(' resSubQueryData.rows.item(0)', resSubQueryData.rows.item(0));
//                                                     if(resSubQueryData.rows.length>0){
//                                                         let tempSubDataRow = resSubQueryData.rows.item(0);
//                                                         insertObj['hpb_id']=tempSubDataRow['hpb_id'];
//                                                         insertDataFun(insertObj,tableName).then(()=>{
//                                                                 reolveHpbFunafterSync(true);
//                                                         },(errorInsertDataFun)=>{
//                                                                   reolveHpbFunafterSync(true);
//                                                         });

//                                                     }else{
//                                                         console.log('Project Not Inserted....');
//                                                           reolveHpbFunafterSync(true);
//                                                            insertObj['hpb_id']=0;
//                                                           insertDataFun(insertObj,tableName).then(()=>{
//                                                                 reolveHpbFunafterSync(true);
//                                                         },(errorInsertDataFun)=>{
//                                                                   reolveHpbFunafterSync(true);
//                                                         });
//                                                     }

//                                                 },(errorSubQuery)=>{
                                                       
//                                                         console.log('errorSubQuery',errorSubQuery);
//                                                            reolveHpbFunafterSync(true);
//                                                 });

//                                            });
//                                     }     


//                                          if(1){
//                                                    console.log('hbpCheckSync In Project 2');
//                                                   hpbFunafterSync().then(()=>{
//                                                         console.log('hpbFunafterSync In In Project 2');
//                                                          callback();
//                                                    },()=>{
//                                                          callback();
//                                                    });

//                                          }


//                                       },(errDDD)=>{
//                                             console.log('errDDD',errDDD);
//                                             callback();

//                                       });


                                    


//                             }
                            

//                         },(errChild)=>{
//                                 callback();
//                         });

                    
//                   },(err)=>{
                        

//                         // UpSync Start
                        
//                         let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

//                             this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
//                                     console.log('resDataU',resDataU);

//                                     let resDatasUss=[];
//                                     for(let m=0;m<resDataU.rows.length;m++){
//                                         resDatasUss.push(resDataU.rows.item(m));
//                                     }
//                                     console.log('resDatasUss project',resDatasUss);
//                                      async.each(resDatasUss,(resDatasUs,callbackUss)=>{

//                                                 console.log('resDatasUs aync',resDatasUs);

//                                                 let project_id=0;
//                                                 let insertUpdateObj={};
                                               
                                                
//                                                 insertUpdateObj['project_name']=resDatasUs['project_name'];
//                                                 insertUpdateObj['hpb_id']=resDatasUs['server_hpb_id'];
//                                                 insertUpdateObj['project_completion_date']=resDatasUs['project_completion_date'];
//                                                 insertUpdateObj['project_quantity_estimation']=resDatasUs['project_quantity_estimation'];
//                                                 insertUpdateObj['project_type']=resDatasUs['project_type_mid'];
//                                                 insertUpdateObj['project_stage']=resDatasUs['project_stage_mid'];
//                                                 insertUpdateObj['project_photo']=resDatasUs['project_photo'];
//                                                 insertUpdateObj['project_address']=resDatasUs['project_address'];
//                                                 insertUpdateObj['project_province']=resDatasUs['project_province'];
//                                                 insertUpdateObj['project_city']=resDatasUs['project_city'];
//                                                 insertUpdateObj['project_sub_district']=resDatasUs['project_sub_district'];
//                                                 insertUpdateObj['project_pincode']=resDatasUs['project_pincode'];
//                                                 insertUpdateObj['is_srku']=resDatasUs['is_srku'];
//                                                 insertUpdateObj['srku_owner_name']=resDatasUs['srku_owner_name'];
//                                                 insertUpdateObj['srku_owner_address']=resDatasUs['srku_owner_address'];
//                                                 insertUpdateObj['srku_owner_mobile_no']=resDatasUs['srku_owner_mobile_no'];
//                                                 insertUpdateObj['srku_province']=resDatasUs['srku_province'];
//                                                 insertUpdateObj['srku_city']=resDatasUs['srku_city'];
//                                                 insertUpdateObj['srku_sub_district']=resDatasUs['srku_sub_district'];
//                                                 insertUpdateObj['srku_pincode']=resDatasUs['srku_pincode'];
//                                                 insertUpdateObj['floor_size']=resDatasUs['floor_size'];
//                                                 insertUpdateObj['number_of_units']=resDatasUs['number_of_units'];
//                                                 insertUpdateObj['is_micro_credit']=resDatasUs['is_micro_credit'];
//                                                 insertUpdateObj['bank_name']=resDatasUs['bank_name'];
//                                                 insertUpdateObj['bank_document']=resDatasUs['bank_document'];
//                                                 insertUpdateObj['non_micro_credit_type']=resDatasUs['non_micro_credit_type'];
//                                                 insertUpdateObj['nmc_document']=resDatasUs['nmc_document'];
//                                                 insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
//                                                 insertUpdateObj['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];
//                                                 insertUpdateObj['updated_date']=resDatasUs['updated_date'];
//                                                 insertUpdateObj['updated_by']=resDatasUs['updated_by'];
//                                                 insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
//                                                 insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                

                                                

//                                                  if(resDatasUs['server_poject_id']>0){
//                                                    project_id=resDatasUs['server_poject_id'];
//                                                 }else{
//                                                     insertUpdateObj['latitude']=resDatasUs['latitude'];
//                                                     insertUpdateObj['longitude']=resDatasUs['longitude'];
//                                                     insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
//                                                     insertUpdateObj['created_by']=resDatasUs['created_by'];
//                                                     insertUpdateObj['generated_by']=insertUpdateObj['generated_by'];
//                                                 }

//                                                 insertUpdateObj['hpb_profile_pic']=resDatasUs['hpb_profile_pic'];
//                                                 insertUpdateObj['id_photo']=resDatasUs['id_photo'];
//                                                 insertUpdateObj['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];

//                                                 let allFileObjeArr = {};
//                                                 allFileObjeArr['project_photo']=resDatasUs['project_photo'];
//                                                 allFileObjeArr['bank_document']=resDatasUs['bank_document'];
//                                                 allFileObjeArr['nmc_document']=resDatasUs['nmc_document'];
//                                                 allFileObjeArr['hpb_digital_sign']=resDatasUs['hpb_digital_sign'];
//                                                 console.log('upload LOcal to server start');
//                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{
//                                                   console.log('upload LOcal to server end');
//                                                        // a llFileObjeArrRet
//                                                         insertUpdateObj['project_photo']=JSON.stringify(allFileObjeArrRet['project_photo']);
//                                                         insertUpdateObj['bank_document']=JSON.stringify(allFileObjeArrRet['bank_document']);
//                                                         insertUpdateObj['nmc_document']=JSON.stringify(allFileObjeArrRet['nmc_document']);
//                                                         insertUpdateObj['hpb_digital_sign']=JSON.stringify(allFileObjeArrRet['hpb_digital_sign']);


//                                                         this.appProjApi.addEditProject(insertUpdateObj,project_id).subscribe((resSSSData:any)=>{
//                                                                 console.log('resSSSData',resSSSData);
//                                                                 let updateDataObj={};
//                                                                 updateDataObj['project_photo']=insertUpdateObj['project_photo'];
//                                                                 updateDataObj['bank_document']=insertUpdateObj['bank_document'];
//                                                                 updateDataObj['nmc_document']=insertUpdateObj['nmc_document'];
//                                                                 updateDataObj['hpb_digital_sign']=insertUpdateObj['hpb_digital_sign'];
//                                                                 updateDataObj['server_project_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
//                                                                 updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
//                                                                 updateDataObj['sync_status']=1;
//                                                                 let whereCond=" project_id="+resDatasUs['project_id'];
//                                                                 this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    

//                                                                     let hpb_id=resDatasUs['hpb_id'];
//                                                                     let server_hpb_id=resDatasUs['server_hpb_id'];
//                                                                     let project_id=resDatasUs['project_id'];
//                                                                     let server_project_id=updateDataObj['server_project_id'];
//                                                                     this.syncReceiptsSinglePrD(hpb_id,server_hpb_id,project_id,server_project_id).then(()=>{
//                                                                         callbackUss();
//                                                                     },(errorRcP)=>{
//                                                                         callbackUss();
//                                                                     });

//                                                                    // callbackUss();
//                                                                 },()=>{
//                                                                     callbackUss();
//                                                                 });

                                                                
//                                                         },(errSSS)=>{
//                                                                 console.log('errSSS',errSSS);
//                                                                 callbackUss();
//                                                         });


//                                                     },(errRejU)=>{
//                                                            console.log('errRejU',errRejU);
//                                                             callbackUss();
//                                                  });

                                                
//                                      },(errSSS)=>{

//                                         resolve(true); 

//                                     });

                                    
//                             },(errorU)=>{
//                                     console.log('errorU',errorU);
//                                     resolve(true); 
//                             });



//                   });



//                 },(error)=>{
                    
//                     reject(false);

//                 });


//         },()=>{
//             reject(true);
//         });

//     });    
// }

syncReceiptsSinglePrD(hpb_id,server_hpb_id,project_id,server_project_id){

      return new Promise((resolve,reject)=>{
        
        let tableName='product_receipt_master';
        let filterS={};
        let where =" project_id="+project_id+"";

        

                this.appProdApi.getProductReceipt(null,server_hpb_id,server_project_id,null,null,null,null,null,null).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas['result'];

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE "+where;
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;

                                   

                                    
                                    
                                    if(locaDataRow['product_id']!=respData['product_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['product_id']=respData['product_id'];
                                    }
                                    if(locaDataRow['rds_id']!=respData['rds_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['rds_id']=respData['rds_id'];
                                    }  
                                    if(locaDataRow['quantity']!=respData['quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['quantity']=respData['quantity'];
                                    } 
                                    if(locaDataRow['unit']!=respData['unit']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['unit']=respData['unit'];
                                    }
                                    if(locaDataRow['purchase_date']!=respData['purchase_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['purchase_date']=respData['purchase_date'];
                                    }
                                    if(locaDataRow['invoice_image']!=respData['invoice_image']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['invoice_image']=respData['invoice_image'];
                                    } 
                                    if(locaDataRow['invoice_quantity']!=respData['invoice_quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['invoice_quantity']=respData['invoice_quantity'];
                                    } 
                                    if(locaDataRow['digital_sign']!=respData['digital_sign']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['digital_sign']=respData['digital_sign'];
                                    }
                                    if(locaDataRow['additional_comments']!=respData['additional_comments']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['additional_comments']=respData['additional_comments'];
                                    }
                                    if(locaDataRow['points']!=respData['points']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['points']=respData['points'];
                                    }
                                    
                                    if(locaDataRow['latitude']!=respData['latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['latitude']=respData['latitude'];
                                    } 
                                     if(locaDataRow['longitude']!=respData['longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['longitude']=respData['longitude'];
                                    }
                                     if(locaDataRow['created_date']!=respData['created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_date']=respData['created_date'];
                                    }
                                     if(locaDataRow['updated_date']!=respData['updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_date']=respData['updated_date'];
                                    }
                                    if(locaDataRow['created_by']!=respData['created_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_by']=respData['created_by'];
                                    }
                                   if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    // if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                    //         syncStatus=0;
                                    // }else{
                                    //     updateObj['assigned_to']=respData['assigned_to'];
                                    // }
                                    // if(locaDataRow['generated_by']!=respData['generated_by']){
                                    //         syncStatus=0;
                                    // }else{
                                    //     updateObj['generated_by']=respData['generated_by'];
                                    // }

                                    if(locaDataRow['status']!=respData['status']){
                                        syncStatus=0;
                                    }else{
                                       updateObj['status']=respData['status'];
                                    }
                                  

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" receipt_id="+locaDataRow['receipt_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                    allFileObjeArr['invoice_image']=respData['invoice_image'];
                                    allFileObjeArr['digital_sign']=respData['digital_sign'];
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        updateObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                        updateObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);
                      
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_receipt_id']=respData['receipt_id'];
                                    insertObj['server_hpb_id']=server_hpb_id;
                                    insertObj['hpb_id']=hpb_id;
                                    insertObj['project_id']=project_id;
                                    insertObj['server_project_id']=server_project_id;
                                    insertObj['product_id']=respData['product_id'];
                                    insertObj['rds_id']=respData['rds_id'];
                                    insertObj['quantity']=respData['quantity'];
                                    insertObj['unit']=respData['unit'];
                                    insertObj['purchase_date']=respData['purchase_date'];
                                    insertObj['invoice_image']=respData['invoice_image'];
                                    insertObj['invoice_quantity']=respData['invoice_quantity'];
                                    insertObj['digital_sign']=respData['digital_sign'];
                                    insertObj['additional_comments']=respData['additional_comments'];
                                    insertObj['points']=respData['points'];
                                    insertObj['latitude']=respData['latitude'];
                                    insertObj['longitude']=respData['longitude'];
                                    insertObj['created_date']=respData['created_date'];
                                    insertObj['updated_date']=respData['updated_date'];
                                    insertObj['created_by']=respData['created_by'];
                                    insertObj['updated_by']=respData['updated_by'];
                                 //   insertObj['assigned_to']=respData['assigned_to'];
                                  //  insertObj['generated_by']=respData['generated_by'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    
                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    allFileObjeArr['invoice_image']=respData['invoice_image'];
                                    allFileObjeArr['digital_sign']=respData['digital_sign'];
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        insertObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                        insertObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);

                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let newWhere = where;

                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0 and "+newWhere;
                            console.log('queryUUUUU',queryU);
                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    console.log('resDatasUss',resDatasUss);
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let receipt_id=0;
                                                let insertUpdateObj={};
                                               
                                                

                                                insertUpdateObj['hpb_id']=resDatasUs['server_hpb_id'];
                                                insertUpdateObj['project_id']=server_project_id;
                                                insertUpdateObj['product_id']=resDatasUs['product_id'];
                                                insertUpdateObj['rds_id']=resDatasUs['rds_id'];
                                                insertUpdateObj['quantity']=resDatasUs['quantity'];
                                                insertUpdateObj['unit']=resDatasUs['unit'];
                                                insertUpdateObj['purchase_date']=resDatasUs['purchase_date'];
                                                insertUpdateObj['invoice_image']=resDatasUs['invoice_image'];
                                                insertUpdateObj['invoice_quantity']=resDatasUs['invoice_quantity'];
                                                insertUpdateObj['digital_sign']=resDatasUs['digital_sign'];
                                                insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
                                                insertUpdateObj['points']=resDatasUs['points'];
                                                insertUpdateObj['created_date']=resDatasUs['created_date'];
                                                insertUpdateObj['updated_date']=resDatasUs['updated_date'];
                                                insertUpdateObj['updated_by']=resDatasUs['updated_by'];
                                              //  insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                               
                                                 if(resDatasUs['server_receipt_id']>0){
                                                   receipt_id=resDatasUs['server_receipt_id'];
                                                }else{
                                                    insertUpdateObj['latitude']=resDatasUs['latitude'];
                                                    insertUpdateObj['longitude']=resDatasUs['longitude'];
                                                    insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                    insertUpdateObj['created_by']=resDatasUs['created_by'];
                                                  //  insertUpdateObj['generated_by']=resDatasUs['generated_by'];
                                                   
                                              }

                                                insertUpdateObj['invoice_image']=resDatasUs['invoice_image'];
                                                insertUpdateObj['digital_sign']=resDatasUs['digital_sign'];
                                               

                                                let allFileObjeArr = {};
                                                 allFileObjeArr['invoice_image']=resDatasUs['invoice_image'];
                                                  allFileObjeArr['digital_sign']=resDatasUs['digital_sign'];
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                                       // allFileObjeArrRet
                                                        insertUpdateObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                                        insertUpdateObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);
               
                                                        this.appProdApi.addEditProductReceipt(insertUpdateObj,receipt_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                updateDataObj['invoice_image']=insertUpdateObj['invoice_image'];
                                                                updateDataObj['digital_sign']=insertUpdateObj['digital_sign'];
                                                                updateDataObj['server_project_id']=server_project_id;
                                                                updateDataObj['server_receipt_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" receipt_id="+resDatasUs['receipt_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


       

    });    

}

syncReceiptsD(){

      return new Promise((resolve,reject)=>{
        
        if(1){
            resolve(true);
            return false;
        }


        let tableName='product_receipt_master';
        let filterS={};
        let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";

        this.queryExecuteSql(query,[]).then((resDataQ:any)=>{
                let filterDataH={};
              
                filterDataH['created_by']=sessionUserGlobalData['userId'];
                console.log('resDataQ',resDataQ);
                 if(resDataQ.rows.length > 0){
                    let tmpDataObj=resDataQ.rows.item(0);
                    filterDataH['updated_date']=tmpDataObj['updated_date'];
                }

                this.appProdApi.getProductReceipt(null,null,null,null,null,filterDataH['created_by'],null,null,filterDataH['updated_date']).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas['result'];

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_receipt_id="+respData['receipt_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;
                                    updateObj['server_receipt_id']=respData['receipt_id'];

                                    if(locaDataRow['server_hpb_id']!=respData['hpb_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['server_hpb_id']=respData['hpb_id'];
                                    }
                                    if(locaDataRow['server_project_id']!=respData['project_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['server_project_id']=respData['project_id'];
                                    } 
                                    if(locaDataRow['product_id']!=respData['product_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['product_id']=respData['product_id'];
                                    }
                                    if(locaDataRow['rds_id']!=respData['rds_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['rds_id']=respData['rds_id'];
                                    }  
                                    if(locaDataRow['quantity']!=respData['quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['quantity']=respData['quantity'];
                                    } 
                                    if(locaDataRow['unit']!=respData['unit']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['unit']=respData['unit'];
                                    }
                                    if(locaDataRow['purchase_date']!=respData['purchase_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['purchase_date']=respData['purchase_date'];
                                    }
                                    if(locaDataRow['invoice_image']!=respData['invoice_image']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['invoice_image']=respData['invoice_image'];
                                    } 
                                    if(locaDataRow['invoice_quantity']!=respData['invoice_quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['invoice_quantity']=respData['invoice_quantity'];
                                    } 
                                    if(locaDataRow['digital_sign']!=respData['digital_sign']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['digital_sign']=respData['digital_sign'];
                                    }
                                    if(locaDataRow['additional_comments']!=respData['additional_comments']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['additional_comments']=respData['additional_comments'];
                                    }
                                    if(locaDataRow['points']!=respData['points']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['points']=respData['points'];
                                    }
                                    
                                    if(locaDataRow['latitude']!=respData['latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['latitude']=respData['latitude'];
                                    } 
                                     if(locaDataRow['longitude']!=respData['longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['longitude']=respData['longitude'];
                                    }
                                     if(locaDataRow['created_date']!=respData['created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_date']=respData['created_date'];
                                    }
                                     if(locaDataRow['updated_date']!=respData['updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_date']=respData['updated_date'];
                                    }
                                    if(locaDataRow['created_by']!=respData['created_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_by']=respData['created_by'];
                                    }
                                   if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['assigned_to']=respData['assigned_to'];
                                    }
                                    if(locaDataRow['generated_by']!=respData['generated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['generated_by']=respData['generated_by'];
                                    }

                                    if(locaDataRow['status']!=respData['status']){
                                        syncStatus=0;
                                    }else{
                                       updateObj['status']=respData['status'];
                                    }
                                  

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_receipt_id="+respData['receipt_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                    allFileObjeArr['invoice_image']=respData['invoice_image'];
                                    allFileObjeArr['digital_sign']=respData['digital_sign'];
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        updateObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                        updateObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);
                      
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_receipt_id']=respData['receipt_id'];
                                    insertObj['server_hpb_id']=respData['hpb_id'];
                                    insertObj['server_project_id']=respData['project_id'];
                                    insertObj['product_id']=respData['product_id'];
                                    insertObj['rds_id']=respData['rds_id'];
                                    insertObj['quantity']=respData['quantity'];
                                    insertObj['unit']=respData['unit'];
                                    insertObj['purchase_date']=respData['purchase_date'];
                                    insertObj['invoice_image']=respData['invoice_image'];
                                    insertObj['invoice_quantity']=respData['invoice_quantity'];
                                    insertObj['digital_sign']=respData['digital_sign'];
                                    insertObj['additional_comments']=respData['additional_comments'];
                                    insertObj['points']=respData['points'];
                                    insertObj['latitude']=respData['latitude'];
                                    insertObj['longitude']=respData['longitude'];
                                    insertObj['created_date']=respData['created_date'];
                                    insertObj['updated_date']=respData['updated_date'];
                                    insertObj['created_by']=respData['created_by'];
                                    insertObj['updated_by']=respData['updated_by'];
                                    insertObj['assigned_to']=respData['assigned_to'];
                                    insertObj['generated_by']=respData['generated_by'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    
                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    allFileObjeArr['invoice_image']=respData['invoice_image'];
                                    allFileObjeArr['digital_sign']=respData['digital_sign'];
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        insertObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                        insertObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);

                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let receipt_id=0;
                                                let insertUpdateObj={};
                                               
                                                

                                                insertUpdateObj['hpb_id']=resDatasUs['server_hpb_id'];
                                                insertUpdateObj['project_id']=resDatasUs['server_project_id'];
                                                insertUpdateObj['product_id']=resDatasUs['product_id'];
                                                insertUpdateObj['rds_id']=resDatasUs['rds_id'];
                                                insertUpdateObj['quantity']=resDatasUs['quantity'];
                                                insertUpdateObj['unit']=resDatasUs['unit'];
                                                insertUpdateObj['purchase_date']=resDatasUs['purchase_date'];
                                                insertUpdateObj['invoice_image']=resDatasUs['invoice_image'];
                                                insertUpdateObj['invoice_quantity']=resDatasUs['invoice_quantity'];
                                                insertUpdateObj['digital_sign']=resDatasUs['digital_sign'];
                                                insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
                                                insertUpdateObj['points']=resDatasUs['points'];
                                                insertUpdateObj['created_date']=resDatasUs['created_date'];
                                                insertUpdateObj['updated_date']=resDatasUs['updated_date'];
                                                insertUpdateObj['updated_by']=resDatasUs['updated_by'];
                                                insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                               
                                                 if(resDatasUs['server_receipt_id']>0){
                                                   receipt_id=resDatasUs['server_receipt_id'];
                                                }else{
                                                    insertUpdateObj['latitude']=resDatasUs['latitude'];
                                                    insertUpdateObj['longitude']=resDatasUs['longitude'];
                                                    insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                    insertUpdateObj['created_by']=resDatasUs['created_by'];
                                                    insertUpdateObj['generated_by']=resDatasUs['generated_by'];
                                                   
                                              }

                                                insertUpdateObj['invoice_image']=resDatasUs['invoice_image'];
                                                insertUpdateObj['digital_sign']=resDatasUs['digital_sign'];
                                               

                                                let allFileObjeArr = {};
                                                 allFileObjeArr['invoice_image']=resDatasUs['invoice_image'];
                                                  allFileObjeArr['digital_sign']=resDatasUs['digital_sign'];
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                                       // allFileObjeArrRet
                                                        insertUpdateObj['invoice_image']=JSON.stringify(allFileObjeArrRet['invoice_image']);
                                                        insertUpdateObj['digital_sign']=JSON.stringify(allFileObjeArrRet['digital_sign']);
               
                                                        this.appProdApi.addEditProductReceipt(insertUpdateObj,receipt_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                updateDataObj['invoice_image']=insertUpdateObj['invoice_image'];
                                                                updateDataObj['digital_sign']=insertUpdateObj['digital_sign'];
                                                                updateDataObj['server_receipt_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" receipt_id="+resDatasUs['receipt_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


        },()=>{
            reject(true);
        });

    });    

}

syncRDSVisitD(){
    


     return new Promise((resolve,reject)=>{
        
        let tableName='rds_visit';
        let filterS={};
        let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";

        this.queryExecuteSql(query,[]).then((resDataQ:any)=>{
                let filterDataH={};
              
                filterDataH['created_by']=sessionUserGlobalData['userId'];
                console.log('resDataQ',resDataQ);
                 if(resDataQ.rows.length > 0){
                    let tmpDataObj=resDataQ.rows.item(0);
                    filterDataH['updated_date']=tmpDataObj['updated_date'];
                }

                this.appRdsVisitApi.getRdsVisit(null,null,null,filterDataH['created_by'],filterDataH['updated_date']).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas['result'];

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_rds_visit_id="+respData['rds_visit_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;
                                    updateObj['server_rds_visit_id']=respData['rds_visit_id'];

                                    if(locaDataRow['rds_id']!=respData['rds_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['rds_id']=respData['rds_id'];
                                    }
                                    if(locaDataRow['visit_date']!=respData['visit_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['visit_date']=respData['visit_date'];
                                    } 
                                    if(locaDataRow['additional_comments']!=respData['additional_comments']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['additional_comments']=respData['additional_comments'];
                                    }
                                   
                                    
                                    if(locaDataRow['latitude']!=respData['latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['latitude']=respData['latitude'];
                                    } 
                                     if(locaDataRow['longitude']!=respData['longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['longitude']=respData['longitude'];
                                    }
                                     if(locaDataRow['created_date']!=respData['created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_date']=respData['created_date'];
                                    }
                                     if(locaDataRow['updated_date']!=respData['updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_date']=respData['updated_date'];
                                    }
                                    if(locaDataRow['created_by']!=respData['created_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['created_by']=respData['created_by'];
                                    }
                                   if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['updated_by']!=respData['updated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['updated_by']=respData['updated_by'];
                                    }
                                    if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['assigned_to']=respData['assigned_to'];
                                    }
                                    if(locaDataRow['generated_by']!=respData['generated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['generated_by']=respData['generated_by'];
                                    }

                                    if(locaDataRow['status']!=respData['status']){
                                        syncStatus=0;
                                    }else{
                                       updateObj['status']=respData['status'];
                                    }
                                  

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_rds_visit_id="+respData['rds_visit_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                       
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          
                                        //   this.syncRetCurSkSingleD(respData['rds_visit_id'],locaDataRow['rds_visit_id']).then(()=>{
                                        //         callback();
                                        //   },()=>{
                                        //         callback();
                                        //   });

                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_rds_visit_id']=respData['rds_visit_id'];
                                    insertObj['rds_id']=respData['rds_id'];
                                    insertObj['visit_date']=respData['visit_date'];
                                    insertObj['additional_comments']=respData['additional_comments'];
                                    insertObj['latitude']=respData['latitude'];
                                    insertObj['longitude']=respData['longitude'];
                                    insertObj['created_date']=respData['created_date'];
                                    insertObj['updated_date']=respData['updated_date'];
                                    insertObj['created_by']=respData['created_by'];
                                    insertObj['updated_by']=respData['updated_by'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    insertObj['assigned_to']=respData['assigned_to'];
                                    insertObj['generated_by']=respData['generated_by'];


                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        this.insertData(insertObj,tableName).then((resInsData:any)=>{
                                                callback();

                                                // this.syncRetCurSkSingleD(respData['rds_visit_id'],resInsData['insertId']).then(()=>{
                                                //         callback();
                                                // },()=>{
                                                //         callback();
                                                // });

                                            },(err)=>{
                                                callback();
                                        });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let rds_visit_id=0;
                                                let insertUpdateObj={};
                                               
                                                insertUpdateObj['rds_id']=resDatasUs['rds_id'];
                                                insertUpdateObj['visit_date']=resDatasUs['visit_date'];
                                                insertUpdateObj['additional_comments']=resDatasUs['additional_comments'];
                                                insertUpdateObj['created_date']=resDatasUs['created_date'];
                                                insertUpdateObj['updated_date']=resDatasUs['updated_date'];
                                                
                                                insertUpdateObj['updated_by']=resDatasUs['updated_by'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                                                

                                                
                                                 if(resDatasUs['server_rds_visit_id']>0){
                                                      rds_visit_id=resDatasUs['server_rds_visit_id'];
                                                }else{
                                                    insertUpdateObj['latitude']=resDatasUs['latitude'];
                                                    insertUpdateObj['longitude']=resDatasUs['longitude'];
                                                    insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                    insertUpdateObj['created_by']=resDatasUs['created_by'];
                                                    insertUpdateObj['generated_by']=resDatasUs['generated_by'];
                                                }

                                                
                                               

                                                let allFileObjeArr = {};
                                                 
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                          
                                                        this.appRdsVisitApi.addEditRdsVisit(insertUpdateObj,rds_visit_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                
                                                                updateDataObj['server_rds_visit_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" rds_visit_id="+resDatasUs['rds_visit_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    
                                                                    // this.syncRetCurSkSingleD(updateDataObj['server_rds_visit_id'],resDatasUs['rds_visit_id']).then(()=>{
                                                                    //   callbackUss();
                                                                    // },()=>{
                                                                    //   callbackUss();
                                                                    // });

                                                                     callbackUss();


                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


        },()=>{
            reject(true);
        });

    });    


}

syncRetCurSkSingleD(server_rds_visit_id,rds_visit_id){
    return new Promise((resolve,reject)=>{

        console.log('syncRetCurSkSingleD',server_rds_visit_id,rds_visit_id);

          return new Promise((resolve,reject)=>{
        
                let tableName='retailer_curent_stock';
                let filterS={};
                let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";
                let userId=sessionUserGlobalData['userId'];
                filterS={"where":{"and":[{"rds_visit_id":server_rds_visit_id}]}};
                this.app_rds_stockApi.find(filterS).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas;

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_stock_id="+respData['stock_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;
                                   

                                   
                                    if(locaDataRow['product_brand_id']!=respData['product_brand_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['product_brand_id']=respData['product_brand_id'];
                                    }
                                   
                                    if(locaDataRow['stock_selling_price']!=respData['stock_selling_price']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_selling_price']=respData['stock_selling_price'];
                                    } 
                                     if(locaDataRow['stock_promo']!=respData['stock_promo']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_promo']=respData['stock_promo'];
                                    }
                                     if(locaDataRow['stock_quantity']!=respData['stock_quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_quantity']=respData['stock_quantity'];
                                    }
                                     if(locaDataRow['stock_unit']!=respData['stock_unit']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_unit']=respData['stock_unit'];
                                    }
                                    
                                    if(locaDataRow['local_created_date']!=respData['local_created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_created_date']=respData['local_created_date'];
                                    }
                                    if(locaDataRow['local_updated_date']!=respData['local_updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_updated_date']=respData['local_updated_date'];
                                    }

                                    updateObj['rds_visit_id']=rds_visit_id;
                                    updateObj['server_rds_visit_id']=server_rds_visit_id;
                                    console.log('respData',respData);

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_stock_id="+respData['stock_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                       
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_stock_id']=respData['stock_id'];
                                    insertObj['rds_visit_id']=rds_visit_id;
                                    insertObj['server_rds_visit_id']=server_rds_visit_id;
                                    insertObj['product_brand_id']=respData['product_brand_id'];
                                    insertObj['stock_selling_price']=respData['stock_selling_price'];
                                    insertObj['stock_promo']=respData['stock_promo'];
                                    insertObj['stock_quantity']=respData['stock_quantity'];
                                    insertObj['stock_unit']=respData['stock_unit'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    


                                    
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                    },(err)=>{
                        

                        // UpSync Start
                        
                            let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0 and rds_visit_id="+rds_visit_id;

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let stock_id=0;
                                                let insertUpdateObj={};
                                               

                                                insertUpdateObj['rds_visit_id']=resDatasUs['server_rds_visit_id'];
                                                insertUpdateObj['product_brand_id']=resDatasUs['product_brand_id'];
                                                insertUpdateObj['stock_selling_price']=resDatasUs['stock_selling_price'];
                                                insertUpdateObj['stock_promo']=resDatasUs['stock_promo'];
                                                insertUpdateObj['stock_quantity']=resDatasUs['stock_quantity'];
                                                insertUpdateObj['stock_unit']=resDatasUs['stock_unit'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                
                                        
                                                 if(resDatasUs['server_stock_id']>0){
                                                      stock_id=resDatasUs['server_stock_id'];
                                                 }else{
                                                      insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                 }

                                                
                                               

                                                let allFileObjeArr = {};
                                                 
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{
                                                
                                                       
                                                        let   whereSerC={"stock_id":stock_id};
                                                        
                                                       

                                                        this.app_rds_stockApi.upsertWithWhere(whereSerC,insertUpdateObj).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                
                                                                updateDataObj['server_rds_visit_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['rds_visit_id']=rds_visit_id;
                                                                updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" stock_id="+resDatasUs['stock_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });

                                                              callbackUss();
                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


      

    });   


    });
}

syncRetCurSkD(){

         return new Promise((resolve,reject)=>{
            
               

                let tableName='retailer_curent_stock';
                let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";
                let userId=sessionUserGlobalData['userId'];
                let filterS={"where":{"or":[{"check_in_out_user_id":userId}]}}
    
              this.app_rds_stockApi.find(filterS).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas;

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_stock_id="+respData['stock_id']+"";
                        
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);

                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

                                    console.log('locaDataRow',locaDataRow);

                                    let updateObj={};
                                    let syncStatus=1;
                                   

                                    if(locaDataRow['rds_visit_id']!=respData['rds_visit_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['rds_visit_id']=respData['rds_visit_id'];
                                    } 
                                    if(locaDataRow['product_brand_id']!=respData['product_brand_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['product_brand_id']=respData['product_brand_id'];
                                    }
                                   
                                    if(locaDataRow['stock_selling_price']!=respData['stock_selling_price']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_selling_price']=respData['stock_selling_price'];
                                    } 
                                     if(locaDataRow['stock_promo']!=respData['stock_promo']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_promo']=respData['stock_promo'];
                                    }
                                     if(locaDataRow['stock_quantity']!=respData['stock_quantity']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_quantity']=respData['stock_quantity'];
                                    }
                                     if(locaDataRow['stock_unit']!=respData['stock_unit']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['stock_unit']=respData['stock_unit'];
                                    }
                                    
                                    if(locaDataRow['local_created_date']!=respData['local_created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_created_date']=respData['local_created_date'];
                                    }
                                    if(locaDataRow['local_updated_date']!=respData['local_updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_updated_date']=respData['local_updated_date'];
                                    }

                                    
                                    console.log('respData',respData);

                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_stock_id="+respData['stock_id']+" ";
                                  
                                    let allFileObjeArr = {};
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                       
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_stock_id']=respData['stock_id'];
                                 //   insertObj['rds_visit_id']=respData['rds_visit_id'];
                                    insertObj['server_rds_visit_id']=respData['server_rds_visit_id'];
                                    insertObj['product_brand_id']=respData['product_brand_id'];
                                    insertObj['stock_selling_price']=respData['stock_selling_price'];
                                    insertObj['stock_promo']=respData['stock_promo'];
                                    insertObj['stock_quantity']=respData['stock_quantity'];
                                    insertObj['stock_unit']=respData['stock_unit'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    


                                    
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                            let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let stock_id=0;
                                                let insertUpdateObj={};
                                               

                                                insertUpdateObj['rds_visit_id']=resDatasUs['server_rds_visit_id'];
                                                insertUpdateObj['product_brand_id']=resDatasUs['product_brand_id'];
                                                insertUpdateObj['stock_selling_price']=resDatasUs['stock_selling_price'];
                                                insertUpdateObj['stock_promo']=resDatasUs['stock_promo'];
                                                insertUpdateObj['stock_quantity']=resDatasUs['stock_quantity'];
                                                insertUpdateObj['stock_unit']=resDatasUs['stock_unit'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                
                                        
                                                 if(resDatasUs['server_stock_id']>0){
                                                      stock_id=resDatasUs['server_stock_id'];
                                                 }else{
                                                      insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                 }

                                                
                                               

                                                let allFileObjeArr = {};
                                                 
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                                        let whereSerC={"stock_id":stock_id}
                                                        this.app_rds_stockApi.upsertWithWhere(whereSerC,insertUpdateObj).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                
                                                                // updateDataObj['server_rds_visit_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                // updateDataObj['updated_date']=resSSSData['result']['updated_date']?resSSSData['result']['updated_date']:0;
                                                                // updateDataObj['sync_status']=1;
                                                                // let whereCond=" check_in_out_id="+resDatasUs['check_in_out_id'];
                                                                // this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                //     callbackUss();
                                                                // },()=>{
                                                                //     callbackUss();
                                                                // });

                                                              callbackUss();
                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


      

    });   
     
  
}


syncCheckInCheckOutD(){

         return new Promise((resolve,reject)=>{
        
                let tableName='check_in_out';
                let filterS={};
                let query="SELECT * FROM "+tableName+" ORDER BY updated_date desc LIMIT 1";
                let userId=sessionUserGlobalData['userId'];
                filterS={"where":{"or":[{"check_in_out_user_id":userId}]}}
                this.app_check_in_outApi.find(filterS).subscribe((respDatas:any)=>{
                    
                    console.log('respDatas',respDatas);

                    let responseResults = respDatas;

                    console.log('responseResults',responseResults);

                    // DownSync Start
                    
                    async.each(responseResults,(respData,callback:any)=>{
                        
                        console.log('DownSync each respData',respData);

                        let sQuery="SELECT * FROM "+tableName+" WHERE server_check_in_out_id="+respData['check_in_out_id']+"";
                        console.log('sQuery',sQuery);
                        this.queryExecuteSql(sQuery,[]).then((resQuData:any)=>{

                            console.log('queryExecuteSql resQuData',resQuData);
                             console.log('queryExecuteSql resQuData',resQuData);
                            if(resQuData.rows.length > 0){
                                    
                                    let locaDataRow=resQuData.rows.item(0);

  

                                    let updateObj={};
                                    let syncStatus=1;
                                     console.log('respData S iN',respData);
                                    if(locaDataRow['check_in_out_user_id']!=respData['check_in_out_user_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_out_user_id']=respData['check_in_out_user_id'];
                                    }
                                    if(locaDataRow['check_in_out_type']!=respData['check_in_out_type']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_out_type']=respData['check_in_out_type'];
                                    } 
                                    if(locaDataRow['check_in_out_type_id']!=respData['check_in_out_type_id']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_out_type_id']=respData['check_in_out_type_id'];
                                    }
                                   
                                    if(locaDataRow['check_in_latitude']!=respData['check_in_latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_latitude']=respData['check_in_latitude'];
                                    } 
                                     if(locaDataRow['check_in_longitude']!=respData['check_in_longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_longitude']=respData['check_in_longitude'];
                                    }
                                     if(locaDataRow['check_in_datetime']!=respData['check_in_datetime']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_in_datetime']=respData['check_in_datetime'];
                                    }
                                     if(locaDataRow['check_out_latitude']!=respData['check_out_latitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_out_latitude']=respData['check_out_latitude'];
                                    }
                                    if(locaDataRow['check_out_longitude']!=respData['check_out_longitude']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_out_longitude']=respData['check_out_longitude'];
                                    }
                                   if(locaDataRow['check_out_datetime']!=respData['check_out_datetime']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['check_out_datetime']=respData['check_out_datetime'];
                                    }
                                    if(locaDataRow['generated_by']!=respData['generated_by']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['generated_by']=respData['generated_by'];
                                    }
                                    if(locaDataRow['assigned_to']!=respData['assigned_to']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['assigned_to']=respData['assigned_to'];
                                    }
                                    if(locaDataRow['local_created_date']!=respData['local_created_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_created_date']=respData['local_created_date'];
                                    }
                                    if(locaDataRow['local_updated_date']!=respData['local_updated_date']){
                                            syncStatus=0;
                                    }else{
                                        updateObj['local_updated_date']=respData['local_updated_date'];
                                    }

                                    if(locaDataRow['status']!=respData['status']){
                                        syncStatus=0;
                                    }else{
                                       updateObj['status']=respData['status'];
                                    }
                                  
                                     console.log('respData E iN',respData);
                                    updateObj['sync_status']=syncStatus;
                                    updateObj['ext_data']="";
                                    let whereCon=" server_check_in_out_id="+respData['check_in_out_id']+"";
                                  
                                    let allFileObjeArr = {};
                                   
                                    
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                       console.log('updateObj',updateObj);
                                       console.log('tableName',tableName);
                                       console.log('whereCon',whereCon);     
                                       
                                        this.updateData(updateObj,tableName,whereCon).then((resInsData)=>{
                                      
                                          callback();

                                        // File Save To Local IF Updated

                                        },(err)=>{

                                          callback();

                                        }); 

                                },(errDDDDD)=>{

                                     callback();

                                });
                                  
                                  


                            }else{


                                    let insertObj={};
                                    insertObj['server_check_in_out_id']=respData['check_in_out_id'];
                                    insertObj['check_in_out_user_id']=respData['check_in_out_user_id'];
                                    insertObj['check_in_out_type']=respData['check_in_out_type'];
                                    insertObj['check_in_out_type_id']=respData['check_in_out_type_id'];
                                    insertObj['check_in_latitude']=respData['check_in_latitude'];
                                    insertObj['check_in_longitude']=respData['check_in_longitude'];
                                    insertObj['check_out_latitude']=respData['check_out_latitude'];
                                    insertObj['check_out_longitude']=respData['check_out_longitude'];
                                    insertObj['check_in_datetime']=respData['check_in_datetime'];
                                    insertObj['check_out_datetime']=respData['check_out_datetime'];
                                    insertObj['local_updated_date']=respData['local_updated_date'];
                                    insertObj['local_created_date']=respData['local_created_date'];
                                    insertObj['assigned_to']=respData['assigned_to'];
                                    insertObj['generated_by']=respData['generated_by'];


                                    if(respData['status']){
                                        insertObj['status']=respData['status'];
                                    }else{
                                         insertObj['status']=1;
                                    }
                                    insertObj['sync_status']=1;
                                    insertObj['ext_data']="";

                                    let allFileObjeArr = {};
                                    
                                   
                                    this.downloadServerFileToLocal(allFileObjeArr).then((allFileObjeArrRet)=>{

                                        this.insertData(insertObj,tableName).then((resInsData)=>{
                                                callback();
                                            },(err)=>{
                                                callback();
                                          });

                                    },(errDDD)=>{

                                        callback();

                                    });


                                    


                            }
                            

                        },(errChild)=>{
                                callback();
                        });

                    
                  },(err)=>{
                        

                        // UpSync Start
                        
                        let queryU="SELECT * FROM "+tableName+" WHERE sync_status=0";

                            this.queryExecuteSql(queryU,[]).then((resDataU:any)=>{
                                    console.log('resDataU',resDataU);

                                    let resDatasUss=[];
                                    for(let m=0;m<resDataU.rows.length;m++){
                                        resDatasUss.push(resDataU.rows.item(m));
                                    }
                                    
                                     async.each(resDatasUss,(resDatasUs,callbackUss)=>{

                                                let check_in_out_id=0;
                                                let insertUpdateObj={};
                                               
                                                

                                                
                                                insertUpdateObj['check_in_out_user_id']=resDatasUs['check_in_out_user_id'];
                                                insertUpdateObj['check_in_out_type']=resDatasUs['check_in_out_type'];
                                                insertUpdateObj['check_in_out_type_id']=resDatasUs['check_in_out_type_id'];
                                                insertUpdateObj['check_in_latitude']=resDatasUs['check_in_latitude'];
                                                insertUpdateObj['check_in_longitude']=resDatasUs['check_in_longitude'];
                                                insertUpdateObj['check_out_latitude']=resDatasUs['check_out_latitude'];
                                                insertUpdateObj['check_out_longitude']=resDatasUs['check_out_longitude'];
                                                insertUpdateObj['check_in_datetime']=resDatasUs['check_in_datetime'];
                                                insertUpdateObj['check_out_datetime']=resDatasUs['check_out_datetime'];
                                                insertUpdateObj['local_updated_date']=resDatasUs['local_updated_date'];
                                                insertUpdateObj['local_created_date']=resDatasUs['local_created_date'];
                                                insertUpdateObj['assigned_to']=resDatasUs['assigned_to'];
                        
                                                
                                                 if(resDatasUs['server_check_in_out_id']>0){
                                                      check_in_out_id=resDatasUs['server_check_in_out_id'];
                                                }else{
                                                      insertUpdateObj['generated_by']=resDatasUs['generated_by'];

                                                }

                                                
                                               

                                                let allFileObjeArr = {};
                                                 
                                                 this.uploadLocalFileToServer(allFileObjeArr).then((allFileObjeArrRet)=>{

                                                       // let whereSerC={"check_in_out_id":check_in_out_id}
                                                        this.app_check_in_outApi.checkInOut(insertUpdateObj,check_in_out_id).subscribe((resSSSData:any)=>{
                                                                console.log('resSSSData',resSSSData);
                                                                let updateDataObj={};
                                                                
                                                                updateDataObj['server_check_in_out_id']=resSSSData['result']['id']?resSSSData['result']['id']:0;
                                                                updateDataObj['sync_status']=1;
                                                                let whereCond=" check_in_out_id="+resDatasUs['check_in_out_id'];
                                                                this.updateData(updateDataObj,tableName,whereCond).then(()=>{
                                                                    
                                                                    callbackUss();
                                                                },()=>{
                                                                    callbackUss();
                                                                });
                                                            //  callbackUss();
                                                                
                                                        },(errSSS)=>{
                                                                console.log('errSSS',errSSS);
                                                                callbackUss();
                                                        });


                                                    },()=>{
                                                            callbackUss();
                                                 });

                                                
                                     },(errSSS)=>{

                                        resolve(true); 

                                    });

                                    
                            },(errorU)=>{
                                    console.log('errorU',errorU);
                                    resolve(true); 
                            });



                  });



                },(error)=>{
                    reject(false);
                });


      

    });   

}

getMineTypes(extType){

        let mimeType="image/jpeg";

        if(extType=="jpeg" || extType=="jpg"){
            mimeType="image/jpeg";
        }else if(extType=="png"){
            mimeType="image/png";
        }else if(extType=="gif"){
            mimeType="image/gif";
        }else if(extType=="pdf"){
            mimeType="application/pdf";
        }else if(extType=="doc"){
            mimeType="application/msword";
        }else if(extType=="doc"){
            mimeType="application/vnd.openxmlformats-officedocument.wordprocessingml.document";
        }else if(extType=="doc"){
            mimeType="application/vnd.openxmlformats-officedocument.wordprocessingml.document";
        }else if(extType=="xls"){
            mimeType="application/vnd.ms-excel";
        }else if(extType=="xlsx"){
            mimeType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        }

        return mimeType;
}

uploadLocalFileToServer(allFileObjeArr){

      return new Promise((resolve,reject)=>{

        console.log('allFileObjeArr',allFileObjeArr);

        let newAllFileObjeArr={};

         let  asyncTaksFiles = [];

        const fileTransfer: TransferObject = this.transfer.create();

        for (let key in allFileObjeArr) {

            console.log('key upload object',key);

            let keyName=key;

            if(allFileObjeArr.hasOwnProperty(keyName)){
                newAllFileObjeArr[keyName]=[];

                let filesArrs = allFileObjeArr[keyName] && allFileObjeArr[keyName]!="" ?JSON.parse(allFileObjeArr[keyName]):[];
               
                 console.log('key upload object',key);

                asyncTaksFiles.push((callback)=>{

                   async.each(filesArrs,(fileS,callbackC)=>{

                        if(fileS['sync_status']==1 || fileS['sync_status']=="1"){
                            newAllFileObjeArr[keyName].push(fileS);
                            callbackC();
                            return false;
                        }
                        
                        let mimeType=this.getMineTypes(fileS['fileType']);
                        let fileName=fileS['name'];
                        let fileLocalPath=fileS['path'];
                        let uploadUrl=SITE_API.CONTAINER+fileS['container']+"/upload";
                        let options = {
                            fileKey: "file",
                            fileName: fileName,
                            chunkedMode: false,
                            mimeType: mimeType,
                            params : {"fileName":fileName}
                        };

                        fileTransfer.upload(fileLocalPath,uploadUrl,options)
                        .then((dataT) => {
                             // success
                             console.log('File Upload suceess',dataT);
                             fileS['serverPath']=SITE_API.CONTAINER+fileS['container']+"/download/"+fileName;
                             fileS['sync_status']=1;
                             newAllFileObjeArr[keyName].push(fileS);
                             callbackC();
                        }, (errT) => {
                             // error
                              console.log('File Upload error',errT);
                              callbackC();
                        });
                            
                        
                    },(error)=>{

                        callback();
                    });

                });
          }

     }

    
         let allTaskComplete = ()=>{
            resolve(newAllFileObjeArr);
        }

        async.parallel(asyncTaksFiles, function(){
            allTaskComplete();
        });

         
      });
}

downloadServerFileToLocal(allFileObjeArr){
         return new Promise((resolve,reject)=>{


        let newAllFileObjeArr={};

         let  asyncTaksFiles = [];

        const fileTransfer: TransferObject = this.transfer.create();

        for (let key in allFileObjeArr) {

            let keyName=key;
            if(allFileObjeArr.hasOwnProperty(keyName)){
                newAllFileObjeArr[keyName]=[];
                let filesArrs = JSON.parse(allFileObjeArr[keyName]);

                asyncTaksFiles.push((callback)=>{

                   async.each(filesArrs,(fileS,callbackC)=>{

                            let downloadPath = fileS['serverPath'];
                            let downFileName = fileS['name'];
                            fileTransfer.download(downloadPath, this.file.dataDirectory + downFileName).then((entry) => {
                              //  console.log('download complete: ' + entry.toURL());
                                let downPath = entry.toURL();
                                console.log('File Download suceess',entry);
                                fileS['path']=downPath;
                                fileS['sync_status']=1;
                                newAllFileObjeArr[keyName].push(fileS);
                                callbackC();

                             }, (errT) => {
                                // handle error
                                console.log('File download error',errT);
                                callbackC();
                            });
                            
                        
                    },(error)=>{

                        callback();
                    });

                });
          }

     }

    
         let allTaskComplete = ()=>{
            resolve(newAllFileObjeArr);
        }

        async.parallel(asyncTaksFiles, function(){
            allTaskComplete();
        });

         
      });    
}

 syncAllMaster(){
     return new Promise((resolve,reject)=>{
      console.log('syncAllMaster');
      console.log('sessionUserGlobalData',sessionUserGlobalData);


        let allTaskComplete = ()=>{
            resolve(true);
        }


      	var asyncTasks = [];

        asyncTasks.push((callback)=>{
                this.syncRdsM().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });

        asyncTasks.push((callback)=>{
                this.syncProductM().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });  

  

        asyncTasks.push((callback)=>{
                this.syncProjectStageM().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        }); 

        asyncTasks.push((callback)=>{
                this.syncProjectTypeM().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });

        asyncTasks.push((callback)=>{
                this.syncProjectNmcM().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });      

        asyncTasks.push((callback)=>{
                this.syncTargetsMaster().then(()=>{
                   // resolve(true);
                   callback();
                },()=>{
                  //   reject(true);
                  callback();
                });
        });                


        async.parallel(asyncTasks, function(){
            allTaskComplete();
        });


      //let allMasterTableList=['retailer_distributor_master','product_master','brand_master','project_stage_tbl','project_type_tbl','nmc_tbl','monthly_actual_target','monthly_forecast_target','monthly_visiting_schedule'];
      
 });
 
}

   

syncRdsM(){
     return new Promise((resolve,reject)=>{
        
         let subDist = sessionUserGlobalData['user']['subdistrict'];
         let subDistFilterArr=[];
         for(let l=0;l<subDist.length;l++){
            subDistFilterArr.push({
                "rds_sub_district":subDist[l]['subdistrict_id']
            });
         }
         // {"where":{"or":[{"sph_id":311}]}}
        let tableName='retailer_distributor_master';
        let filterS={"where":{"or":subDistFilterArr}};
       // filterS['offset']=0;
       // filterS['limit']=100;
        this.app_rdsApi.find(filterS).subscribe((resDatas)=>{
                  console.log('resData',resDatas);
                  async.each(resDatas,(resData,callback:any)=>{
                    let insertObj={};
                    insertObj['server_rds_id']=resData['id'];
                    insertObj['holcim_id']=resData['holcim_id'];
                    insertObj['rds_name']=resData['rds_name'];
                    insertObj['rds_mobile']=resData['rds_mobile'];
                    insertObj['rds_phone']=resData['rds_phone'];
                    insertObj['rds_email']=resData['rds_email'];
                    insertObj['rds_gender']=resData['rds_gender'];
                    insertObj['rds_type']=resData['rds_type'];
                    insertObj['rds_address']=resData['rds_address'];
                    insertObj['rds_province']=resData['rds_province'];
                    insertObj['rds_sub_district']=resData['rds_sub_district'];
                    insertObj['rds_city']=resData['rds_city'];
                    insertObj['rds_postalcode']=resData['rds_postalcode'];
                    insertObj['rds_status']=resData['rds_status'];
                    insertObj['created_date']=resData['created_date'];
                    insertObj['updated_date']=resData['updated_date'];
                    insertObj['created_by']=resData['created_by'];
                    insertObj['updated_by']=resData['updated_by'];
                    insertObj['sync_status']=1;
                    insertObj['ext_data']="";
                    this.insertOrReplaceData(insertObj,tableName).then((resInsData)=>{
                        callback();
                    },(err)=>{
                        callback();
                    })                     
                  },(err)=>{
                        resolve(true); 
                  })
        },(error)=>{
                console.log('app_rdsApi error',error);
                reject(false);
        });
     });
}

syncProductM(){
     return new Promise((resolve,reject)=>{

        let tableName='product_master';
        let filterS={};
      //  filterS['offset']=0;
      //  filterS['limit']=1000;
        this.app_productsApi.find(filterS).subscribe((resDatas)=>{
                  console.log('resData',resDatas);
                  async.each(resDatas,(resData,callback:any)=>{
                    let insertObj={};
                    insertObj['server_product_id']=resData['id'];
                    insertObj['product_name']=resData['name'];
                    insertObj['product_type']=resData['type'];
                    insertObj['product_unit']=resData['unit'];
                    insertObj['product_points']=resData['points'];
                    insertObj['product_cash']=resData['cash'];
                    insertObj['req_ac_approv_qty']=resData['req_ac_approv_qty'];
                    insertObj['status']=resData['status'];
                    insertObj['created_date']=resData['created_date'];
                    insertObj['created_by']=resData['created_by'];
                    insertObj['updated_date']=resData['updated_date'];
                    insertObj['updated_by']=resData['updated_by'];
                    insertObj['sync_status']=1;
                    insertObj['ext_data']="";
                    this.insertOrReplaceData(insertObj,tableName).then((resInsData)=>{
                        callback();
                    },(err)=>{
                        callback();
                    })                     
                  },(err)=>{
                        resolve(true); 
                  });
        },(error)=>{
                console.log('app_rdsApi error',error);
                reject(false);
        });
     });  
}

syncProjectStageM(){
    return new Promise((resolve,reject)=>{

            let tableName='project_stage_tbl';
            let filterS={};
           // filterS['offset']=0;
           // filterS['limit']=100;
            this.project_stageApi.find(filterS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_id']=resData['id'];
                        insertObj['project_stage']=resData['project_stage'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                         insertObj['sync_status']=1;
                         insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableName).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            callback();
                        })                     
                    },(err)=>{
                            resolve(true); 
                    })
            },(error)=>{
                    console.log('app_rdsApi error',error);
                    reject(false);
            });
    });   
}
syncProjectTypeM(){
    return new Promise((resolve,reject)=>{

            let tableName='project_type_tbl';
            let filterS={};
           // filterS['offset']=0;
           // filterS['limit']=100;
            this.project_typeApi.find(filterS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_id']=resData['id'];
                        insertObj['project_type']=resData['project_type'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                         insertObj['sync_status']=1;
                         insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableName).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            callback();
                        })                     
                    },(err)=>{
                            resolve(true); 
                    })
            },(error)=>{
                    console.log('app_rdsApi error',error);
                    reject(false);
            });
    });   
}

syncProjectNmcM(){

    return new Promise((resolve,reject)=>{

            let tableName='nmc_tbl';
            let filterS={};
           // filterS['offset']=0;
           // filterS['limit']=100;
            this.nmcApi.find(filterS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_id']=resData['id'];
                        insertObj['nmc_type']=resData['nmc_type'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                        insertObj['sync_status']=1;
                        insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableName).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            callback();
                        })                     
                    },(err)=>{
                            resolve(true); 
                    })
            },(error)=>{
                    console.log('app_rdsApi error',error);
                    reject(false);
            });
    });   

}

syncTargetsMaster(){
      return new Promise((resolve,reject)=>{
        let sphId = sessionUserGlobalData['userId'];
        let tableNameMAT='monthly_actual_target';
        let tableNameMFT='monthly_forecast_target';
        let tableNameMVS='monthly_visiting_schedule';
        let filterMATS={"where":{"or":[{"sph_id":sphId}]}};
        let filterMFTS={"where":{"or":[{"sph_id":sphId}]}};
        let filterMVSS={"where":{"or":[{"sph_id":sphId}]}};
       // {"where":{"or":[{"sph_id":311}]}}
        let allTaskCompleteNew = ()=>{
           resolve(true);
        }


    let asyncTaskss = [];

    asyncTaskss.push((callbackMATS)=>{

        this.monthly_actual_targetApi.find(filterMATS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_target_id']=resData['target_id'];
                        insertObj['sph_id']=resData['sph_id'];
                        insertObj['postal_code']=resData['postal_code'];
                        insertObj['target_month']=resData['target_month'];
                        insertObj['target_year']=resData['target_year'];
                        insertObj['target_label']=resData['target_label'];
                        insertObj['target_value']=resData['target_value'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                         insertObj['sync_status']=1;
                         insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableNameMAT).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            
                            callback();
                        })                     
                    },(err)=>{
                            callbackMATS(); 
                    })
            },(error)=>{
                    console.log('monthly_actual_targetApi error',error);
                    callbackMATS(); 
            });


    });

    asyncTaskss.push((callbackMFTS)=>{

        this.monthly_forecast_targetApi.find(filterMFTS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_dt_id']=resData['dt_id'];
                        insertObj['sph_id']=resData['sph_id'];
                        insertObj['visitor_id']=resData['visitor_id'];
                        insertObj['target_month']=resData['target_month'];
                        insertObj['target_year']=resData['target_year'];
                        insertObj['target_label']=resData['target_label'];
                        insertObj['target_value']=resData['target_value'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                         insertObj['sync_status']=1;
                         insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableNameMFT).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            callback();
                        })                     
                    },(err)=>{
                            callbackMFTS(); 
                    })
            },(error)=>{
                    console.log('monthly_actual_targetApi error',error);
                    callbackMFTS(); 
            });


    });

    asyncTaskss.push((callbackMVSS)=>{

        this.monthly_visiting_scheduleApi.find(filterMVSS).subscribe((resDatas)=>{
                    console.log('resData',resDatas);
                    async.each(resDatas,(resData,callback:any)=>{
                        let insertObj={};
                        insertObj['server_dv_id']=resData['dv_id'];
                        insertObj['sph_id']=resData['sph_id'];
                        insertObj['visitor_id']=resData['visitor_id'];
                        insertObj['visit_date']=moment(resData['visit_date']).valueOf();
                        insertObj['visitor_type']=resData['visitor_type'];
                        insertObj['status']=resData['status'];
                        insertObj['created_date']=resData['created_date'];
                        insertObj['created_by']=resData['created_by'];
                        insertObj['updated_date']=resData['updated_date'];
                        insertObj['updated_by']=resData['updated_by'];
                        insertObj['sync_status']=1;
                        insertObj['ext_data']="";
                        this.insertOrReplaceData(insertObj,tableNameMVS).then((resInsData)=>{
                            callback();
                        },(err)=>{
                            callback();
                        })                     
                    },(err)=>{
                            callbackMVSS(); 
                    })
            },(error)=>{
                    console.log('monthly_actual_targetApi error',error);
                          callbackMVSS(); 
            });


    });    

        
        async.parallel(asyncTaskss, function(){
            allTaskCompleteNew();
        });

    }); 
}

 insertData(dataArrObj,tableName){
       return new Promise((resolve, reject) => {
            try{
                    this.storageSql.transaction((tx) => {
                        var dataArr = [];
                        var paramsArr=[];
                        for(var o in dataArrObj) {
                            dataArr.push(dataArrObj[o]);
                            paramsArr.push("?");
                        }
                        let paramsKey= paramsArr.join(', ');
                        let keyString=Object.keys(dataArrObj).join(', ');
                        let query = "INSERT INTO "+ tableName +" (" + keyString + ") VALUES ("+ paramsKey +")";
                        tx.executeSql(query,dataArr, (tx,data) => {
                            console.log('data inserted...');
                            resolve(data);
                        },(tx,error) => {
                            console.log('failed to Update',error);
                            reject(error);
                        });
                    });  
            }catch(err){
                console.log('sqlite fail',err);
                reject(err);
                
            }
        })
  }

 insertOrReplaceData(dataArrObj,tableName){
       return new Promise((resolve, reject) => {
            try{
                    this.storageSql.transaction((tx) => {
                        var dataArr = [];
                        var paramsArr=[];
                        for(var o in dataArrObj) {
                            dataArr.push(dataArrObj[o]);
                            paramsArr.push("?");
                        }
                        let paramsKey= paramsArr.join(', ');
                        let keyString=Object.keys(dataArrObj).join(', ');
                        let query = "INSERT OR REPLACE INTO "+ tableName +" (" + keyString + ") VALUES ("+ paramsKey +")";
                        tx.executeSql(query,dataArr, (tx,data) => {
                            console.log('data inserted...');
                            resolve(data);
                        },(tx,error) => {
                            console.log('failed to Update',error);
                            
                            reject(error);
                        });
                    });  
            }catch(err){
                console.log('sqlite fail',err);
                reject(err);
                
            }
        })
  }

updateData(dataArrObj,tableName,whereCond?:any){
    return new Promise((resolve, reject) => {
        try{
            this.storageSql.transaction((tx) => {
                var dataArr = [];
                var paramsArr=[];
                for(var o in dataArrObj) {
                    dataArr.push(dataArrObj[o]);
                    paramsArr.push(o+"=?");
                }
                let paramsKey= paramsArr.join(', ');
                if(whereCond!=""){
                    whereCond='where '+whereCond;
                }
                let query = "update  "+ tableName +" set "+ paramsKey +" "+whereCond;
            
                tx.executeSql(query,dataArr, (tx,data) => {
                    console.log('data updated...');
                    resolve(data);
                },(tx,error) => {
                    console.log('failed to Update',error);
                    reject(error);
                }); 
            });  
        }catch(err){
            console.log('sqlite fail',err);
            reject(err);      
        }
    })
}
selectTableData(selectField,tableName,where,orderBy,limit){
        return new Promise((resolve, reject) => {
          try{
            let dataArr=[];
              let query = "SELECT "+selectField+" FROM "+tableName+" ";
              if(where!=""){
                  query +=" WHERE  "+where;
              }
              if(orderBy!=""){
                  query +=" ORDER BY  "+orderBy;
              }

              if(limit!=""){
                  query +=" LIMIT "+limit;
              }
              console.log('query select ',query);
              //setTimeout(()=>{
                    this.storageSql.transaction((storage) => {
                        storage.executeSql(query,dataArr, (storage,data) => {
                            resolve(data);
                        },(storage,error) => {
                            console.log('failed select query');
                            reject(error);
                        });
                    });  
              //},100);
           }catch(err){
                console.log('sqlite fail',err);
                reject(err);
                
            }

        });
  }


  queryExecuteSql(queryAll,dataArr){
        return new Promise((resolve, reject) => {
          try{            
                this.storageSql.transaction((storage) => {
                    storage.executeSql(queryAll,dataArr, (storage,data) => {
                        resolve(data);
                    },(storage,error) => {
                        reject(error);
                    });
                });  
           }catch(err){
                reject(err);     
            }

        });
  }



}